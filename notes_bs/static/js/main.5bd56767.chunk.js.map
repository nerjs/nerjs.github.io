{"version":3,"sources":["../../../utils/validate/index.js","../../../utils/global/index.js","../../../utils/validate/types/objectId.js","../../../utils/validate/types/noteKind.js","../../../utils/validate/strictNotes/schemas.js","../../../utils/validate/sortDates.js","../../../utils/validate/notesInput.js","../../../utils/validate/notesInputQuery.js","../../../utils/validate/strictNotes/index.js","../../../utils/validate/user/index.js","../../../utils/validate/user/getOne.js","helpers/routes.js","components/header/menu.js","data/Auth/queries.js","helpers/filterError.js","data/Auth/useAuthContext.js","data/Auth/index.js","hooks/useAuth.js","components/header/userMenu.js","components/header/index.js","components/wrappers/PageWrapper.js","routes/Home.js","data/GqlDataProvider.js","data/ErrorHandling.js","data/CoreProvider.js","routes/Users.js","helpers/time.js","hooks/useBody/icon.js","hooks/useBody/index.js","hooks/useBody/title.js","components/userSeidebar/UserInfo.js","components/userSeidebar/index.js","hooks/useUserLoginToId.js","components/notes/panel/Panel.js","components/notes/panel/sections/ShareSection.js","components/makeNotes/ctx/helpers.js","components/makeNotes/ctx/useMakeNotes.js","components/makeNotes/ctx/ctx.js","components/icons/kind.js","components/icons/formKind.js","components/makeNotes/Tabs.js","components/fields/text.js","components/fields/textarea.js","components/fields/submit.js","components/makeNotes/fields/dir.js","components/makeNotes/fields/text.js","components/makeNotes/fields/link.js","components/makeNotes/form/btn.js","components/makeNotes/form/form.js","components/makeNotes/Body.js","components/makeNotes/index.js","components/notes/Make/MakeCoreDialog.js","components/notes/Make/Add.js","components/notes/Make/Edit.js","components/notes/panel/sections/MakeSection/AddSection.js","components/notes/panel/sections/MakeSection/EditSection.js","components/notes/panel/sections/MakeSection/index.js","components/notes/panel/sections/Breadcrumbs/UserCrumb.js","components/notes/panel/sections/KindIconSection.js","components/notes/panel/sections/Breadcrumbs/Crumb.js","components/notes/panel/sections/Breadcrumbs/CurrentCrumb.js","components/notes/panel/sections/Breadcrumbs/index.js","components/notes/panel/ListPanel.js","components/notes/panel/ItemPanel.js","components/notes/panel/ShortItemPanel.js","components/notes/listItems/Dir.js","components/notes/listItems/Text.js","components/notes/listItems/Link.js","components/notes/listItems/index.js","components/notes/NotesList/ListItem.js","components/notes/NotesList/List.js","components/notes/NotesList/index.js","components/notes/NoteItem/Item.js","components/notes/NoteItem/index.js","routes/User.js","routes/Notes.js","components/wrappers/EmptyWrapper.js","routes/Entry/AlertError.js","routes/Entry/Registration.js","routes/Entry/Login.js","routes/Entry/Logout.js","helpers/route/PublicRoute.js","helpers/route/PrivateRoute.js","helpers/route/ProtectedRoute.js","routes/Entry/index.js","App.js","serviceWorker.js","index.js","../../../utils/validate/auth.js"],"names":["exports","sortDates","require","notesInput","notesInputQuery","strictNotesInput","notes","auth","user","NOTE_TYPES","DIR","TEXT","LINK","NOTE_TYPES_ARR","Object","keys","map","key","USER_SETTINGS","MIN_LOGIN","MAX_LOGIN","MATCH_LOGIN","MIN_PASSWORD","MAX_PASSWORD","MATCH_PASSWORD","SESSION_MAX_AGE","yup","module","string","length","oneOf","core","object","shape","title","min","text","dirSchema","concat","required","textSchema","linkSchema","url","img","created","bool","updated","parent","noteKind","objectId","owner","root","when","is","then","otherwise","kind","skip","number","integer","limit","positive","schemas","nullable","note","Error","getOne","loginField","id","l","login","queryLink","obj","qs","stringify","addQueryPrefix","strictNullHandling","homeRoute","query","usersRoute","offset","userRoute","path","link","userId","userLogin","noteRoute","noteId","state","pathname","entryRoute","referer","window","location","ListItemLink","props","button","component","Link","Menu","open","onClose","Drawer","anchor","List","aria-label","to","ME_QUERY","gql","REGISTRATION_MUTATION","LOGIN_MUTATION","LOGOUT_MUTATION","AUTH_SUBSCRIBE","GqlClientError","message","_ext","exception","ext","serverData","forEach","code","getError","err","needPath","defaultMessage","recursive","graphQLErrors","find","gErr","equalPaths","firstPath","secondPath","Array","isArray","join","search","extensions","getRedirectUrl","redirect","fullLink","match","origin","AuthContext","createContext","AuthProvider","children","contextValue","useState","setUser","isAuth","setIsAuth","error","setError","useQuery","meLoading","loading","meError","data","meRefetch","refetch","useMutation","gqlRegistration","registrationData","regLoading","gqlLogin","loginData","loginLoading","gqlLogout","logoutData","logoutLoading","subData","useSubscription","refetchMeQuery","useCallback","variables","mutation","a","result","mrData","me","href","gqlCodes","VALIDATION","registration","logout","clearError","useEffect","setTimeout","console","log","useAuthContext","Provider","value","useAuth","useContext","AuthLinks","Button","color","NotAuthLinks","UserHeaderMenu","Header","menuOpen","setMenuOpen","switchMenu","o","AppBar","position","Toolbar","variant","IconButton","edge","onClick","Typography","style","flexGrow","document","body","margin","PageWrapper","Container","width","minWidth","paddingRight","paddingLeft","HomeRoute","JSON","process","REACT_APP_API_SERVER_HOST","REACT_APP_API_SERVER_PORT","REACT_APP_API_SERVER_PATH","REACT_APP_SUBSCRIBE_SERVER_PATH","urlGql","protocol","wsUrlGql","GqlDataProvider","uri","wsUri","httpOptions","credentials","AlertError","idx","handlerClose","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","transform","Alert","elevation","severity","ErrorHandlingProvider","errors","setErrors","lastError","useGqlErrors","handleClose","eArr","filter","e","networkError","operation","newErrors","ClientGqlError","index","Date","now","codes","push","CoreProvider","Auth","basename","ErrorHandling","GET_USERS","UsersRoute","LinearProgress","allUsers","timeFormat","date","moment","format","icon","collection","head","getElementsByTagName","i","rel","createElement","append","getIconTag","domIcon","prevIcon","prevTitle","useTitle","useIcon","UserInfo","createdAt","updatedAt","useBody","ListItemIcon","ListItemText","GET_USER","UserSidebar","Paper","getUser","useUserLoginToId","Panel","Grid","container","justify","direction","wrap","alignItems","padding","SharePanelSection","setOpen","switchOpen","Tooltip","size","disabled","fontSize","defaultInitialValues","kindFields","notesSchema","fields","fieldKey","setKind","initialValues","merge","blockedKind","Set","nt","useValues","actions","submitText","onCancel","cancelText","submit","cancel","handler","useActions","changeKind","newKind","includes","handleSubmit","values","onSubmit","reduce","field","MakeNotesContext","MakeNotesProvider","ctx","useMakeNotes","FolderIcon","TextFieldsIcon","LinkIcon","kindIcons","CreateNewFolderIcon","tabIcon","TIcon","MakeNotesTabs","Tabs","indicatorColor","textColor","onChange","marginBottom","Tab","label","undefined","has","TextField","name","type","useField","meta","touched","labelTxt","placeholder","fullWidth","helperText","multiline","rowsMax","SubmitField","useFormikContext","isSubmitting","marginTop","some","MakeDirFields","MakeTextFields","MakeLinkFields","MakeNotesSubmitBtn","validateForm","submitAction","cancelAction","MakeNotesForm","setSubmitting","validationSchema","MakeNotesBody","Fields","MakeNotes","Card","CardContent","MakeCoreDialog","variablesFilter","errorPath","setLoading","make","ValidationClientGqlError","parseServerGqlError","hasResults","replace","Dialog","DialogTitle","DialogContent","ADD_NOTE","AddNote","addNote","GET_NOTE","EDIT_NOTE","EditNote","editNote","Backdrop","CircularProgress","AddPanelSection","showForm","setShowForm","snackBar","setSnackbar","hideSnackbar","switchShowForm","s","Add","EditPanelSection","useLocation","history","useHistory","edit","Edit","MakePanelSection","UserCrumb","display","flexWrap","textDecoration","titles","KindIconPanelSection","Icon","opacity","ParentCrumb","marginLeft","whiteSpace","CurrentCrumb","getStyles","makeStyles","marginRight","ol","flexDirection","li","Breadcrumbs","current","currentTitle","currentKind","parentTitle","ownerLogin","classes","Crumb","ListNotesPanel","ItemNotesPanel","ShortItemNotesPanel","show","setShow","handleHover","handleBlur","overflow","onMouseEnter","onMouseLeave","justifyContent","top","right","item","DirListItem","fontWeight","paddingBottom","TextListItem","LinkListItem","target","letterSpacing","ListItemInner","ListItem","listItems","GET_NOTES","NotesListInner","sort","NotesList","ListPanel","maxWidth","Item","targer","NoteItem","ItemPanel","UserRoute","params","spacing","md","NoteRouteInner","NotesRoute","useRouteMatch","EmptyWrapper","status","RegistrationEntryRoute","setStatus","CardHeader","password","confirmPassword","registrationSchema","LoginEntryRoute","loginSchema","LogoutEntryRoute","backLink","handlerLogout","subheader","ButtonGroup","PublicRoute","PrivateRoute","Component","rest","render","ProtectedRoute","EntryRoute","CardActions","App","exact","Boolean","hostname","ReactDOM","getElementById","navigator","serviceWorker","ready","unregister","catch","max","matches","test","this"],"mappings":"qFAAAA,EAAQC,UAAYC,EAAQ,KAC5BF,EAAQG,WAAaD,EAAQ,KAC7BF,EAAQI,gBAAkBF,EAAQ,KAClCF,EAAQK,iBAAmBH,EAAQ,KACnCF,EAAQM,MAAQJ,EAAQ,KACxBF,EAAQO,KAAOL,EAAQ,IACvBF,EAAQQ,KAAON,EAAQ,M,iBCNvBF,EAAQS,WAAa,CACjBC,IAAK,MACLC,KAAM,OACNC,KAAM,QAGVZ,EAAQa,eAAiBC,OAAOC,KAAKf,EAAQS,YAAYO,KAAI,SAAAC,GAAG,OAAIjB,EAAQS,WAAWQ,MAEvFjB,EAAQkB,cAAgB,CACpBC,UAAW,EACXC,UAAW,GACXC,YAAa,gBACbC,aAAc,EACdC,aAAc,GACdC,eAAgB,oBAGpBxB,EAAQyB,gBAAkB,M,oBCjB1B,IAAMC,EAAMxB,EAAQ,IAEpByB,EAAO3B,QAAU0B,EAAIE,SAASC,OAAO,K,oBCFrC,IAAMH,EAAMxB,EAAQ,IACZW,EAAmBX,EAAQ,IAA3BW,eAERc,EAAO3B,QAAU0B,EAAIE,SAASE,MAAMjB,I,mCCH9Ba,EAAMxB,EAAQ,IACZO,EAAeP,EAAQ,IAAvBO,WAEFsB,EAAOL,EAAIM,SAASC,MAAM,CAC5BC,MAAOR,EAAIE,SAASO,IAAI,GACxBC,KAAMV,EAAIE,SAASO,IAAI,KAGrBE,EAAYN,EAAKO,OACnBZ,EAAIM,SAASC,MAAM,CACfC,MAAOR,EAAIE,SAASW,cAItBC,EAAaT,EAAKO,OACpBZ,EAAIM,SAASC,MAAM,CACfG,KAAMV,EAAIE,SAASW,cAIrBE,EAAaV,EAAKO,OACpBZ,EAAIM,SAASC,MAAM,CACfS,IAAKhB,EACAE,SACAc,MACAH,WACLI,IAAKjB,EAAIE,SAASc,SAI1Bf,EAAO3B,SAAP,OACKS,EAAWC,IAAM2B,GADtB,IAEK5B,EAAWE,KAAO6B,GAFvB,IAGK/B,EAAWG,KAAO6B,GAHvB,I,0DC9BA,IAAMf,EAAMxB,EAAQ,IAEpByB,EAAO3B,QAAU0B,EAAIM,SAASC,MAAM,CAChCW,QAASlB,EAAImB,OACbC,QAASpB,EAAImB,U,oBCJjB,IAAMnB,EAAMxB,EAAQ,IAEpByB,EAAO3B,QAAU0B,EAAIM,SAASC,MAAM,CAChCC,MAAOR,EAAIE,SACXQ,KAAMV,EAAIE,SACVmB,OAAQrB,EAAIE,SACZc,IAAKhB,EAAIE,SAASc,MAClBC,IAAKjB,EAAIE,SAASc,S,oBCPtB,IAAMhB,EAAMxB,EAAQ,IACd8C,EAAW9C,EAAQ,KACnB+C,EAAW/C,EAAQ,KAEzByB,EAAO3B,QAAU0B,EAAIM,SAASC,MAAM,CAChCiB,MAAOD,EAASV,WAChBY,KAAMzB,EAAImB,OACVE,OAAQE,EAASG,KAAK,OAAQ,CAC1BC,IAAI,EACJC,KAAM,kBAAML,GACZM,UAAW,kBAAMN,EAASV,cAE9BiB,KAAMR,EACNS,KAAM/B,EACDgC,SACAvB,IAAI,GACJwB,UACLC,MAAOlC,EACFgC,SACAG,WACAF,a,oBCpBT,IAAMjC,EAAMxB,EAAQ,IACd8C,EAAW9C,EAAQ,KACnB4D,EAAU5D,EAAQ,KAClB+C,EAAW/C,EAAQ,KAEfyB,EAAO3B,QAAU0B,EAAIM,SAASC,MAAM,CAC1CuB,KAAMR,EAAST,WACfQ,OAAQE,EAASc,WACjBC,KAAMtC,EAAIM,SAASoB,KAAK,QAAQ,SAAAI,GAC5B,IAAKM,EAAQN,GAAO,MAAM,IAAIS,MAAJ,wBAA2BT,EAA3B,iBAC1B,OAAOM,EAAQN,S,oBCVvBxD,EAAQkE,OAAShE,EAAQ,M,oBCAzB,IAAMwB,EAAMxB,EAAQ,IACd+C,EAAW/C,EAAQ,KACjBiE,EAAejE,EAAQ,IAAvBiE,WAERxC,EAAO3B,QAAU0B,EAAIM,SAASC,MAAM,CAChCmC,GAAInB,EAASG,KAAK,QAAS,CACvBC,GAAI,SAAAgB,GAAC,QAAMA,GACXd,UAAWN,EAASV,aAExB+B,MAAOH,K,+LCPEI,EAAY,SAAAC,GAAG,OACxBC,IAAGC,UAAUF,EAAK,CAAEG,gBAAgB,EAAMC,oBAAoB,KAErDC,EACH,IADGA,EAEH,SAAAC,GAAK,iBAAQP,EAAUO,KAGpBC,EACH,SADGA,EAEH,SAAAC,GAAM,sBAAaT,EAAU,CAAES,aAG5BC,EAAY,CACrBC,KAAM,CAAC,YAAa,iBACpBC,KAAM,SAACC,EAAQC,GAAT,OAAwBD,EAAM,YAAQA,GAAR,aAAyBC,KAGpDC,EACH,aADGA,EAEH,SAACC,EAAQC,GAAT,OAAoBA,EAAQ,CAAEC,SAAS,MAAD,OAAQF,GAAUC,SAA/B,aAA+CD,IAGrEG,EACH,SADGA,EAGF,CACHR,KAAM,eACNC,KAAM,iBAAO,CAAEM,SAAU,eAAgBD,MAAO,CAAEG,QAASC,OAAOC,SAASJ,aALtEC,EAOK,CACVR,KAAM,sBACNC,KAAM,iBAAO,CACTM,SAAU,sBACVD,MAAO,CAAEG,QAASC,OAAOC,SAASJ,aAXjCC,EAcD,CACJR,KAAM,gBACNC,KAAM,iBAAO,CAAEM,SAAU,gBAAiBD,MAAO,CAAEG,QAASC,OAAOC,SAASJ,aCjC9EK,EAAe,SAAAC,GAAK,OAAI,kBAAC,IAAD,eAAUC,QAAM,EAACC,UAAWC,KAAUH,KAarDI,EAXF,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,QAClB,OACI,kBAACC,EAAA,EAAD,CAAQC,OAAO,OAAOH,KAAMA,EAAMC,QAASA,GACvC,kBAACG,EAAA,EAAD,CAAMP,UAAU,MAAMQ,aAAW,6BAC7B,kBAAC,EAAD,CAAcC,GAAI7B,KAAlB,QACA,kBAAC,EAAD,CAAc6B,GAAI3B,KAAlB,Y,iiCCbT,IAAM4B,EAAWC,IAAH,KAYRC,EAAwBD,IAAH,KAMrBE,EAAiBF,IAAH,KAMdG,EAAkBH,IAAH,KAMfI,EAAiBJ,IAAH,K,6EC9BrBK,G,oDACF,WAAYC,EAAShC,GAAkB,IAAD,EAAXiC,EAAW,uDAAJ,GAAI,qBAClC,cAAMD,GAD4B,IAG1BE,EAAsBD,EAAtBC,UAAcC,EAHY,YAGJF,EAHI,sBAKlC,EAAKG,WAAL,aACIpC,QACIkC,GAAa,IAGrBtG,OAAOC,KAAKsG,GAAKE,SAAQ,SAAAtG,GACrB,EAAKA,GAAOoG,EAAIpG,MAGpB,EAAKuG,MAAU,OAAHH,QAAG,IAAHA,OAAA,EAAAA,EAAKG,OAAQ,eAdS,E,uBADbvD,QA0BhBwD,GAAW,SAACC,EAAKC,EAAUH,EAAMI,EAAgBC,GAAe,IAAD,GAEnEH,EAAII,eAAiB,IAAIC,MACtB,SAAAC,GAAI,aAVU,SAAbC,EAAcC,EAAWC,EAAYN,GAC9C,OAAIO,MAAMC,QAAQH,GAAmBD,EAAWC,EAAUI,KAAK,KAAMH,EAAYN,GAC7EO,MAAMC,QAAQF,GAAoBF,EAAWC,EAAWC,EAAWG,KAAK,KAAMT,GAE3EA,EAA6C,IAAjCK,EAAUK,OAAOJ,GAAoBD,IAAcC,EAMtDF,CAAWD,EAAK9C,KAAMyC,EAAUE,KAAkB,OAAJG,QAAI,IAAJA,GAAA,UAAAA,EAAMQ,kBAAN,eAAkBhB,QAASA,MAChF,IAAIvD,MAAM2D,GAHXV,EADgE,EAChEA,QAAShC,EADuD,EACvDA,KAAMsD,EADiD,EACjDA,WAKvB,OAAO,IAAIvB,GAAeC,EAAShC,EAAMsD,ICvBvCC,GAAiB,WAAqB,IAApBC,EAAmB,uDAAR,IACzBC,EAAW,UAAGD,GAAWE,MAAM,gBAErC,OAAOD,EAAWD,EAAH,UAAiB9C,OAAOC,SAASgD,QAAjC,OAA0CH,ICVhDI,GAAcC,wBAAc,IAO1BC,GALM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACdC,EDUK,WAAO,IAAD,EACOC,mBAAS,MADhB,mBACV3I,EADU,KACJ4I,EADI,OAEWD,oBAAS,GAFpB,mBAEVE,EAFU,KAEFC,EAFE,OAGSH,mBAAS,MAHlB,mBAGVI,EAHU,KAGHC,EAHG,OAKwDC,mBAAS9C,GAAjE+C,EALA,EAKTC,QAA2BC,EALlB,EAKWL,MAAgBM,EAL3B,EAK2BA,KAAeC,EAL1C,EAKiCC,QALjC,EAO0DC,sBACvEnD,GARa,mBAOVoD,EAPU,YAOeC,EAPf,EAOSL,KAAiCM,EAP1C,EAOiCR,QAPjC,EAU8CK,sBAAYlD,GAV1D,mBAUVsD,EAVU,YAUQC,EAVR,EAUER,KAA0BS,EAV5B,EAUmBX,QAVnB,EAWiDK,sBAAYjD,GAX7D,mBAWVwD,EAXU,YAWSC,EAXT,EAWGX,KAA2BY,EAX9B,EAWqBd,QACxBe,EAAYC,0BAAgB3D,GAAlC6C,KAEFe,EAAiBC,sBAAW,uCAC9B,WAAOC,EAAWC,EAAUrC,GAA5B,iBAAAsC,EAAA,6DACIxB,EAAS,MADb,kBAI6BuB,EAAS,CAAED,cAJxC,cAIcG,EAJd,OAKQnB,IAAYxG,MAAK,SAAA4H,GAAW,IAAD,IACvB5B,KAAW,OAAC4B,QAAD,IAACA,GAAD,UAACA,EAAQrB,YAAT,iBAAC,EAAcsB,UAAf,aAAC,EAAkB9H,KAC9BuC,OAAOC,SAASuF,KAAO3C,GAAeC,MAPlD,yBASeuC,QATf,IASeA,GATf,UASeA,EAAQpB,YATvB,aASe,EAAcoB,QAT7B,sCAWQzB,EAAS,EAAD,IDNW9B,ECQM,EAAD,GDRME,ECQU,mBDPpDH,GAASC,ECOiC,SDPtB2D,KAASC,WAAY1D,GAAgB,GCNrD,kCDK0B,IAACF,EAAWE,ICLtC,oBAD8B,0DAiB9B,CAACkC,EAAWN,EAAUF,IAGpBiC,EAAeV,uBACjB,SAACC,EAAWpC,GAAZ,OAAyBkC,EAAeE,EAAWb,EAAiBvB,KACpE,CAACuB,EAAiBW,IAEhBtG,EAAQuG,uBACV,SAACC,EAAWpC,GAAZ,OAAyBkC,EAAeE,EAAWV,EAAU1B,KAC7D,CAAC0B,EAAUQ,IAETY,EAASX,uBACX,SAACC,EAAWpC,GAAZ,OAAyBkC,EAAeE,EAAWP,EAAW7B,KAC9D,CAAC6B,EAAWK,IAGVa,EAAaZ,uBAAY,kBAAMrB,EAAS,QAAO,CAACA,IAEtDkC,qBAAU,YACF9B,GAAYC,GAASA,EAAKsB,IAAOtB,EAAKsB,GAAG9H,IAIzCiG,IAAYO,EAAKsB,GAAG9H,IACpB+F,EAAQS,EAAKsB,GAAG3K,MAAQ,QAJxB8I,GAAU,GACVF,EAAQ,SAKb,CAACQ,EAASC,EAAMT,EAASE,IAE5B,IAAMK,KAAaD,GAAaS,GAAcG,GAAgBG,GAkB9D,OAhBAiB,qBAAU,WAAO,IAAD,aACR,OAAChB,QAAD,IAACA,OAAD,EAACA,EAASnK,QAAQoJ,KAEX,OAAPe,QAAO,IAAPA,GAAA,UAAAA,EAASnK,YAAT,eAAe8C,MAAOgG,IAAtB,OAAgCqB,QAAhC,IAAgCA,GAAhC,UAAgCA,EAASnK,YAAzC,aAAgC,EAAeC,MAC/C4I,EAAQsB,EAAQnK,KAAKC,MACb0J,GAAqBG,GAAcG,IAAc,UAAAE,EAAQnK,YAAR,eAAc8C,MAAOgG,GAC9EsC,YAAW,WACP/F,OAAOC,SAASuF,KAAOxF,OAAOC,SAASuF,OACxC,KAEPQ,QAAQC,KACG,OAAPnB,QAAO,IAAPA,GAAA,UAAAA,EAASnK,YAAT,eAAe8C,MAAOgG,IAAtB,OAAgCqB,QAAhC,IAAgCA,GAAhC,UAAgCA,EAASnK,YAAzC,aAAgC,EAAeC,OAC9C0J,IAAqBG,IAAcG,IAAc,UAAAE,EAAQnK,YAAR,eAAc8C,MAAOgG,MAE5E,CAACA,EAAQa,EAAkBG,EAAWG,EAAYE,EAASf,EAASP,EAASoC,IAEzE,CACH7B,UACAJ,QACA/I,OACA6I,SACAkC,eACAjH,QACAkH,SACAC,cC/FiBK,GACrB,OAAO,kBAAChD,GAAYiD,SAAb,CAAsBC,MAAO9C,GAAeD,ICCxCgD,GANC,WAGZ,OAFgBC,qBAAWpD,KCEzBqD,GAAY,SAAC,GAAD,QAAG3L,KAAQ4D,EAAX,EAAWA,GAAIE,EAAf,EAAeA,MAAf,OACd,oCACI,kBAAC8H,EAAA,EAAD,CAAQC,MAAM,UAAU3F,GAAIzB,EAAUE,KAAKf,GAAK6B,UAAWC,KACtD5B,GAEL,kBAAC8H,EAAA,EAAD,CAAQC,MAAM,UAAU3F,GAAIhB,EAAkBP,OAAQc,UAAWC,KAAjE,YAMFoG,GAAe,kBACjB,oCACI,kBAACF,EAAA,EAAD,CAAQC,MAAM,UAAU3F,GAAIhB,EAAwBP,OAAQc,UAAWC,KAAvE,gBAGA,kBAACkG,EAAA,EAAD,CAAQC,MAAM,UAAU3F,GAAIhB,EAAiBP,OAAQc,UAAWC,KAAhE,WAWOqG,GALQ,WAAO,IAAD,EACAN,KAAjB5C,EADiB,EACjBA,OAAQ7I,EADS,EACTA,KAChB,OAAO6I,EAAS,kBAAC,GAAD,CAAW7I,KAAMA,IAAW,kBAAC,GAAD,OCCjCgM,GAtBA,WAAO,IAAD,EACerD,oBAAS,GADxB,mBACVsD,EADU,KACAC,EADA,KAEXC,EAAa9B,uBAAY,kBAAM6B,GAAY,SAAAE,GAAC,OAAKA,OAAI,CAACF,IAE5D,OACI,oCACI,kBAACG,EAAA,EAAD,CAAQC,SAAS,UACb,kBAACC,EAAA,EAAD,CAASC,QAAQ,SACb,kBAACC,EAAA,EAAD,CAAYC,KAAK,QAAQb,MAAM,UAAU5F,aAAW,OAAO0G,QAASR,GAChE,kBAAC,IAAD,OAEJ,kBAACS,EAAA,EAAD,CAAYC,MAAO,CAAEC,SAAU,GAAKN,QAAQ,MAA5C,QAGA,kBAAC,GAAD,QAGR,kBAAC,EAAD,CAAM5G,KAAMqG,EAAUpG,QAASsG,M,UCtB3CY,SAASC,KAAKH,MAAMI,OAAS,EAE7B,IAgBeC,GAhBK,SAAC,GAAkB,IAAhBzE,EAAe,EAAfA,SACnB,OACI,kBAAC0E,GAAA,EAAD,CACIN,MAAO,CACHO,MAAO,QACPC,SAAU,QACVC,aAAc,EACdC,YAAa,IAGjB,kBAAC,GAAD,MACC9E,ICDE+E,GAZG,WACd,IAAMzN,EAAO0L,KACb,OACI,kBAAC,GAAD,KACI,oCACA,6BACA,6BACA,6BAAMgC,KAAKvJ,UAAUnE,EAAM,KAAM,M,wBCHzC2N,2OAJAC,G,GAAAA,0BACAC,G,GAAAA,0BACAC,G,GAAAA,0BACAC,G,GAAAA,gCAGEC,GAAM,UAAM3I,OAAOC,SAAS2I,SAAtB,aAAmCL,GAAnC,YAAgEC,IAAhE,OAA4FC,IAClGI,GAAQ,eAAWN,GAAX,YAAwCC,IAAxC,OAAoEE,IAgBnEI,GAdS,SAAC,GAAkB,IAAhBzF,EAAe,EAAfA,SACvB,OACI,kBAAC,KAAD,CACI0F,IAAKJ,GACLK,MAAOH,GACPI,YAAa,CACTC,YAAa,YAGhB7F,I,wEChBP8F,GAAa,SAAC,GAA6B,IAA3BxF,EAA0B,EAA1BA,MAAOlD,EAAmB,EAAnBA,QAAS2I,EAAU,EAAVA,IAC5BC,EAAepE,uBACjB,SAACqE,EAAOC,GAAR,QAAqBA,GAAqB,YAAXA,IAAyB9I,EAAQkD,KAChE,CAACA,EAAOlD,IAGZ,OACI,kBAAC+I,GAAA,EAAD,CACIhJ,MAAI,EACJiJ,aAAc,CAAEC,SAAU,SAAUC,WAAY,QAChDC,iBAAkB,KAClBnJ,QAAS4I,EACT5B,MAAO,CACHoC,UAAU,eAAD,OAAiB,IAAMT,EAAM,GAAKA,EAAlC,QAGb,kBAACU,GAAA,EAAD,CAAOC,UAAW,EAAGC,SAAS,QAAQvJ,QAAS4I,GAC1C1F,EAAMrC,WAqCR2I,GA/Be,WAAO,IAAD,EACJ1G,mBAAS,IADL,mBACzB2G,EADyB,KACjBC,EADiB,KAExBC,EAAcC,OAAdD,UAEFE,EAAcrF,uBAAY,SAAAnD,GAAG,OAAIqI,GAAU,SAAAI,GAAI,OAAIA,EAAKC,QAAO,SAAAC,GAAC,OAAIA,IAAM3I,UAAO,CACnFqI,IAqBJ,OAlBArE,qBAAU,WACN,GAAKsE,EAAL,CADY,IAEJM,EAA2CN,EAA3CM,aAAcxI,EAA6BkI,EAA7BlI,cAA6BkI,EAAdO,UAErC,GAAID,EACAP,GAAU,SAAArI,GAAG,6BAAQA,GAAR,CAAa4I,YACvB,GAAIxI,GAAiBM,MAAMC,QAAQP,GAAgB,CACtD,IAAM0I,EAAY,GAClB5E,QAAQC,IAAI/D,GACZA,EAAcP,SAAQ,WAAgCyH,GAAS,IAAtC9H,EAAqC,EAArCA,QAAShC,EAA4B,EAA5BA,KAAMsD,EAAsB,EAAtBA,WAC9Bd,EAAM,IAAI+I,KAAevJ,EAAShC,EAAMsD,GAC9Cd,EAAIgJ,MAAJ,UAAeC,KAAKC,MAApB,YAA6B5B,GACzBtH,EAAIF,OAASiJ,KAAeI,MAAMvF,YAAYkF,EAAUM,KAAKpJ,MAEjE8I,EAAU3O,QAAQkO,GAAU,SAAArI,GAAG,6BAAQA,GAAQ8I,UAExD,CAACT,EAAWC,IAERF,EAAO9O,KAAI,SAAC0G,EAAKsH,GAAN,OACd,kBAAC,GAAD,CAAY/N,IAAKyG,EAAIgJ,MAAO1B,IAAKA,EAAKzF,MAAO7B,EAAKrB,QAAS6J,QCvCpDa,GAXM,SAAC,GAAkB,IAAhB9H,EAAe,EAAfA,SACpB,OACI,kBAAC,GAAD,KACI,kBAAC+H,GAAD,KACI,kBAAC,IAAD,CAAeC,SAAS,KAAKhI,EAA7B,MAEJ,kBAACiI,GAAD,Q,yLCDZ,IAAMpL,GAAe,SAAAC,GAAK,OAAI,kBAAC,IAAD,eAAUC,QAAM,EAACC,UAAWC,KAAUH,KAE9DoL,GAAYvK,IAAH,MA6BAwK,GApBI,WAAO,IAAD,EACY3H,mBAAS0H,IAAlC5H,EADa,EACbA,MAAOI,EADM,EACNA,QAASE,EADH,EACGA,KAExB,OACI,kBAAC,GAAD,KACKF,GAAW,kBAAC0H,GAAA,EAAD,MACX9H,GAAS,kBAACmG,GAAA,EAAD,CAAOE,SAAS,SAASrG,EAAMrC,UACvCqC,GAASM,GAAQA,EAAKyH,UACpB,kBAAC9K,EAAA,EAAD,KACKqD,EAAKyH,SAAStQ,KAAI,gBAAGoD,EAAH,EAAGA,GAAIE,EAAP,EAAOA,MAAP,OACf,kBAAC,GAAD,CAAcrD,IAAKmD,EAAIsC,GAAIzB,EAAUE,KAAKf,IACrCE,S,uGC/BhBiN,GAAa,SAAAC,GAAI,OAAIC,KAAOD,GAAME,OAAO,uBCavC,YAAAC,GAAS,IAAD,EACDxI,mBAdH,WAGf,IAFA,IAAMyI,EAAarE,SAASsE,KAAKC,qBAAqB,QAE7CC,EAAI,EAAGA,EAAIH,EAAW/P,OAAQkQ,IACnC,GAA0B,SAAtBH,EAAWG,GAAGC,IAAgB,OAAOJ,EAAWG,GAGxD,IAAM5M,EAAOoI,SAAS0E,cAAc,QAGpC,OAFA9M,EAAK6M,IAAM,OACXzE,SAASsE,KAAKK,OAAO/M,GACdA,EAIoBgN,IAApBC,EADY,sBAEAjJ,mBAASiJ,EAAQhH,MAA7BiH,EAFY,oBAInB3G,qBACI,kBAAM,WACF0G,EAAQhH,KAAOiH,KAEnB,IAGJ3G,qBAAU,WACN0G,EAAQhH,KAAOuG,IAChB,CAACA,KCzBO,YAAA5L,GAAU,IAAD,EACqB,kBAAVA,EAAqBA,EAAQ,CAAE7D,MAAO6D,GAA7D7D,EADY,EACZA,MAAOyP,EADK,EACLA,MCFJ,SAAAzP,GACXwJ,qBAAU,WACN,IAAM4G,EAAY1M,OAAO2H,SAASrL,MAGlC,OAFA0D,OAAO2H,SAASrL,MAAQA,EAEjB,WACH0D,OAAO2H,SAASrL,MAAQoQ,KAE7B,CAACpQ,IDJJqQ,CAASrQ,GACTsQ,GAAQb,IEmCGc,GA7BE,SAAC,GAAwC,EAAtCrO,GAAuC,IAAnCE,EAAkC,EAAlCA,MAAOoO,EAA2B,EAA3BA,UAAWC,EAAgB,EAAhBA,UAGtC,OAFAC,GAAQ,GAAD,OAAItO,EAAJ,UAGH,kBAACkC,EAAA,EAAD,KACI,kBAAC,IAAD,KACI,kBAACqM,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAAC,IAAD,CAAMnM,GAAIzB,EAAUE,KAAK,KAAMb,IAC3B,kBAAC8I,EAAA,EAAD,CAAYJ,QAAQ,UAAU1I,KAGtC,kBAAC,IAAD,KACI,kBAACuO,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,mBAA0BvB,GAAWmB,KAEzC,kBAAC,IAAD,KACI,kBAACG,GAAA,EAAD,KACI,kBAAC,KAAD,OAEJ,kBAACC,GAAA,EAAD,mBAA0BvB,GAAWoB,O,qOCrBrD,IAAMI,GAAWnM,IAAH,MA+BCoM,GApBK,SAAC,GAAgB,IAAd5N,EAAa,EAAbA,OAAa,EACCqE,mBAASsJ,GAAU,CAChDjI,UAAW,CACP1G,GAAIgB,KAFJuE,EADwB,EACxBA,QAASJ,EADe,EACfA,MAAOM,EADQ,EACRA,KAMxB,OACI,kBAACoJ,GAAA,EAAD,KACKtJ,GAAW,kBAAC0H,GAAA,EAAD,MACX9H,GAAS,kBAACmG,GAAA,EAAD,CAAOE,SAAS,SAASrG,EAAMrC,SACxC2C,GAAQA,EAAKqJ,QACV,kBAAC,GAAarJ,EAAKqJ,SAEnB,kBAACxD,GAAA,EAAD,CAAOE,SAAS,SAAhB,oBCVDuD,GAFU,SAAApN,GAAK,OAAIA,G,SCPnBqN,GAjBD,SAAC,GAAkB,IAAhBnK,EAAe,EAAfA,SACb,OACI,kBAACgK,GAAA,EAAD,CAAO5F,MAAO,CAAEO,MAAO,QACnB,kBAACyF,GAAA,EAAD,CACIC,WAAS,EACTC,QAAQ,WACRC,UAAU,MACVC,KAAK,SACLC,WAAW,SACXrG,MAAO,CAAEsG,QAAS,EAAG7F,aAAc,GAAIL,OAAQ,UAE9CxE,K,+BCoBF2K,GA7BW,SAAC,GAAc,IAAZ1O,EAAW,EAAXA,KAAW,EACZiE,oBAAS,GADG,mBAC7B/C,EAD6B,KACvByN,EADuB,KAG9BC,EAAajJ,uBAAY,kBAAMgJ,GAAQ,SAAAjH,GAAC,OAAKA,OAAI,CAACiH,IAExD,OACI,oCACI,kBAACE,GAAA,EAAD,CAAS7R,MAAM,SACX,kBAAC+K,EAAA,EAAD,CAAYZ,MAAM,YAAY2H,KAAK,QAAQC,SAAU7N,EAAM+G,QAAS2G,GAChE,kBAAC,KAAD,CAAWI,SAAS,YAI3B9N,GACG,kBAACgJ,GAAA,EAAD,CACIC,aAAc,CACVC,SAAU,SACVC,WAAY,QAEhBnJ,MAAI,EACJoJ,iBAAkB,IAClBnJ,QAASyN,EACT5M,QAAO,iBAAYhC,O,0HCvBjCiP,GAAuB,GAEhBC,GAAa,GAE1BtT,OAAOC,KAAKsT,UAAa9M,SAAQ,SAAAtG,GAC7BmT,GAAWnT,GAAO,GAClBH,OAAOC,KAAKsT,SAAYpT,GAAKqT,QAAQ/M,SAAQ,SAAAgN,GACzCJ,GAAqBI,GAAY,GACjCH,GAAWnT,GAAK6P,KAAKyD,SAItB,I,MCbQ,YAAAxO,GAAU,IAAD,EACIoD,mBAASpD,EAAMvC,MAAQ/C,cAAWC,KADtC,mBACb8C,EADa,KACPgR,EADO,ODaC,SAAC,GAAD,IAAGhR,EAAH,EAAGA,KAAMQ,EAAT,EAASA,KAAT,MAAqB,CAC1CyQ,cAAetL,oBAAS,kBAAMuL,KAAM7M,UAAU,GAAIsM,GAAsBnQ,MAAO,GAC/E2Q,YAAaxL,oBACT,kBACI,IAAIyL,IACApR,EACMA,IAAS/C,cAAWC,IAChBG,kBAAeuP,QAAO,SAAAyE,GAAE,OAAIA,IAAOpU,cAAWC,OAC9C,CAACD,cAAWC,KAChB,OAEhB,ICrBqCoU,CAAU/O,GAAzC0O,EAHY,EAGZA,cAAeE,EAHH,EAGGA,YAEjBI,EDsBgB,SAAC,GAAD,IAAGC,EAAH,EAAGA,WAAYC,EAAf,EAAeA,SAAUC,EAAzB,EAAyBA,WAAzB,OACtB/L,oBAAS,iBAAO,CACZgM,OAAQ,CACJ/S,KAAM4S,GAAc,UAExBI,OACIH,GAAgC,oBAAbA,EACb,CACI7S,KAAM8S,GAAc,SACpBG,QAASJ,GAEb,SACV,GClCYK,CAAWvP,GAErBwP,EAAa1K,uBACf,SAACwF,EAAGmF,GACI3U,kBAAe4U,SAASD,IACxBhB,EAAQgB,KAGhB,CAAChB,IAGCkB,EAAe7K,uBACjB,SAAA8K,GAAM,OACF5P,EAAM6P,SACFpS,EACA4Q,GAAW5Q,GAAMqS,QAAO,SAACrR,EAAKsR,GAE1B,OADIH,EAAOG,KAAQtR,EAAIsR,GAASH,EAAOG,IAChCtR,IACR,OAEX,CAAChB,EAAD,OAAOuC,QAAP,IAAOA,OAAP,EAAOA,EAAO6P,WAGlB,MAAO,CAAEpS,OAAM+R,aAAYd,gBAAeE,cAAae,eAAcX,YC7B5DgB,GAAmBhN,wBAAc,IAEjCiN,GAAoB,SAAC,GAA4B,IAA1B/M,EAAyB,EAAzBA,SAAalD,EAAY,4BACnDkQ,EAAMC,GAAanQ,GAEzB,OAAO,kBAACgQ,GAAiBhK,SAAlB,CAA2BC,MAAOiK,GAAMhN,I,6FCHnD,0BACKxI,cAAWC,IAAMyV,MADtB,gBAEK1V,cAAWE,KAAOyV,MAFvB,gBAGK3V,cAAWG,KAAOyV,MAHvB,ICDe,8BACRC,IADP,mBAEK7V,cAAWC,IAAM6V,OCChBC,GAAU,SAAAhT,GACZ,IAAMiT,EAAQH,GAAU9S,GACxB,OAAO,kBAACiT,EAAD,OA2BIC,GAxBO,WAAO,IAAD,EACkBxK,qBAAW6J,IAA7CvS,EADgB,EAChBA,KAAM+R,EADU,EACVA,WAAYZ,EADF,EACEA,YAE1B,OACI,kBAACgC,GAAA,EAAD,CACI3K,MAAOxI,EACPoT,eAAe,UACfC,UAAU,UACVC,SAAUvB,EACVlI,MAAO,CAAE0J,aAAc,KAEtBlW,kBAAeG,KAAI,SAAA6T,GAAE,OAClB,kBAACmC,GAAA,EAAD,CACI/V,IAAK4T,EACLoC,MAAOT,GAAQ3B,QAAMqC,EAAYrC,EACjClD,KAAM6E,GAAQ3B,GACd7I,MAAO6I,EACPZ,SAAUU,EAAYwC,IAAItC,U,mBCL/BuC,GApBG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAAML,EAAsB,EAAtBA,MAAO1U,EAAe,EAAfA,SAAe,EAC7BgV,aAASF,GADoB,mBAC5CvB,EAD4C,KACrC0B,EADqC,KAG7CjO,EAAQiO,EAAKC,SAAWD,EAAKjO,MAC7BmO,EAAWT,EAAK,UAAMA,GAAN,OAAc1U,EAAW,IAAM,SAAO2U,EAC5D,OACI,kBAAC,KAAD,eACII,KAAMA,GACFxB,EAFR,CAGI6B,YAAaD,EACbT,MAAOS,EACPE,WAAS,EACT5K,QAAQ,WACRS,OAAO,QACPlE,QAASA,EACTsO,WAAYtO,MCQT6N,GAvBG,SAAC,GAAqC,IAAnCC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,KAAML,EAAsB,EAAtBA,MAAO1U,EAAe,EAAfA,SAAe,EAC7BgV,aAASF,GADoB,mBAC5CvB,EAD4C,KACrC0B,EADqC,KAG7CjO,EAAQiO,EAAKC,SAAWD,EAAKjO,MAC7BmO,EAAWT,EAAK,UAAMA,GAAN,OAAc1U,EAAW,IAAM,SAAO2U,EAE5D,OACI,kBAAC,KAAD,eACII,KAAMA,GACFxB,EAFR,CAGI6B,YAAaD,EACbT,MAAOS,EACPE,WAAS,EACT5K,QAAQ,WACRS,OAAO,QACPlE,QAASA,EACTsO,WAAYtO,EACZuO,WAAS,EACTC,QAAS,MCENC,GApBK,WAAO,IAAD,EACmBC,eAAjCC,EADc,EACdA,aAAcpI,EADA,EACAA,OAAQ6F,EADR,EACQA,OAE9B,OACI,kBAACvJ,EAAA,EAAD,CACIkL,KAAK,SACLtK,QAAQ,YACRX,MAAM,UACNgB,MAAO,CAAE8K,UAAW,IACpBlE,SACIiE,GACApX,OAAOC,KAAK+O,GAAQsI,MAAK,SAAAnX,GAAG,QAAM6O,EAAO7O,OACzCH,OAAOC,KAAK4U,GAAQyC,MAAK,SAAAnX,GAAG,OAAK0U,EAAO1U,OARhD,WCIOoX,GATO,WAClB,OACI,oCACI,kBAAC,GAAD,CAAWhB,KAAK,QAAQJ,MAAM,QAAQ1U,UAAQ,IAC9C,kBAAC,GAAD,CAAW8U,KAAK,OAAOJ,MAAM,kBCK1BqB,GATQ,WACnB,OACI,oCACI,kBAAC,GAAD,CAAWjB,KAAK,QAAQJ,MAAM,UAC9B,kBAAC,GAAD,CAAeI,KAAK,OAAOJ,MAAM,OAAO1U,UAAQ,MCM7CgW,GAVQ,WACnB,OACI,oCACI,kBAAC,GAAD,CAAWlB,KAAK,QAAQJ,MAAM,UAC9B,kBAAC,GAAD,CAAWI,KAAK,OAAOJ,MAAM,gBAC7B,kBAAC,GAAD,CAAWI,KAAK,MAAMJ,MAAM,WAAW1U,UAAQ,M,qBCkC5CiW,GApCY,WAAO,IAAD,EACkBP,eAAvCC,EADqB,EACrBA,aAAcpI,EADO,EACPA,OAAQ2I,EADD,EACCA,aADD,EAKzBvM,qBAAW6J,IAFXvS,EAHyB,EAGzBA,KAHyB,IAIzBuR,QAAmB2D,EAJM,EAIdvD,OAA8BwD,EAJhB,EAIQvD,OAOrC,OAJA1J,qBAAU,WACN+M,MACD,CAACjV,EAAMiV,IAGN,kBAACpF,GAAA,EAAD,CACIC,WAAS,EACTE,UAAU,MACVD,QAAQ,gBACRG,WAAW,SACXrG,MAAO,CAAE8K,UAAW,KAEpB,kBAAC/L,EAAA,EAAD,CACIkL,KAAK,SACLtK,QAAQ,YACRX,MAAM,UACN4H,SAAUiE,GAAgBpX,OAAOC,KAAK+O,GAAQsI,MAAK,SAAAnX,GAAG,QAAM6O,EAAO7O,OAElEyX,EAAatW,MAEjBuW,GACG,kBAACvM,EAAA,EAAD,CAAQC,MAAM,YAAYc,QAASwL,EAAatD,SAC3CsD,EAAavW,QCMnBwW,GAlCO,SAAC,GAAkB,IAAhB3P,EAAe,EAAfA,SAAe,EACUiD,qBAAW6J,IAAjDvS,EAD4B,EAC5BA,KAAMiR,EADsB,EACtBA,cAAeiB,EADO,EACPA,aAEvBE,EAAW/K,sBAAW,uCACxB,WAAO8K,EAAP,oBAAA3K,EAAA,6DAAiB6N,EAAjB,EAAiBA,cAAe9I,EAAhC,EAAgCA,UAC5B8I,GAAc,GADlB,kBAGcnD,EAAaC,GAH3B,uDAMY,KAAE3U,KAAOF,OAAOC,KAAK,KAAEC,KAAKa,QAC5BkO,EAAU,KAAE/O,KAPxB,QAUI6X,GAAc,GAVlB,yDADwB,wDAaxB,CAACnD,IAGL,OACI,kBAAC,KAAD,CACIjB,cAAeA,EACfqE,iBAAkBzE,SAAY7Q,GAC9BoS,SAAUA,GAEV,kBAAC,KAAD,KACK3M,EACD,6BACA,kBAAC,GAAD,SC3BVqL,IAAM,sBACP7T,cAAWC,IAAM2X,IADV,gBAEP5X,cAAWE,KAAO2X,IAFX,gBAGP7X,cAAWG,KAAO2X,IAHX,IAkBGQ,GAZO,WAAO,IACjBvV,EAAS0I,qBAAW6J,IAApBvS,KAEFwV,EAAS1E,GAAO9Q,GAEtB,OACI,kBAAC,GAAD,KACI,kBAACwV,EAAD,QCDGC,GAbG,SAAAlT,GACd,OACI,kBAACmT,GAAA,EAAD,KACI,kBAAC,GAAsBnT,EACnB,kBAACoT,GAAA,EAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,UC2CLC,GAhDQ,SAAC,GAQjB,IAPHlX,EAOE,EAPFA,MACA6I,EAME,EANFA,SACAsO,EAKE,EALFA,gBACAzD,EAIE,EAJFA,SACAvP,EAGE,EAHFA,QAEGN,GACD,EAFFuT,UAEE,0FAC4BnQ,oBAAS,GADrC,mBACKQ,EADL,KACc4P,EADd,KAEI7D,EAAe7K,sBAAW,sBAC5B,4CAAAG,EAAA,6DACIuO,GAAW,GADf,kBAG+BxO,EAASsO,EAAe,WAAf,MAHxC,gBAGgBxP,EAHhB,EAGgBA,KACR0P,GAAW,GACX3D,GAAU/L,GAAQ,IAAI2P,MAL9B,yDAOc9R,EAAM+R,KAAyBC,oBAAzB,KAAgD,SAEpDC,YACJ7Y,OAAOC,KAAK2G,EAAI1G,KAAKuG,SAAQ,SAAAtG,GACzByG,EAAI1G,IAAIC,EAAI2Y,QAAQ,UAAW,KAAOlS,EAAI1G,IAAIC,MAGtDsY,GAAW,GACL7R,EAfd,0DAkBA,CAACqD,EAAUsO,EAAiBzD,EAAU2D,IAG1C,OACI,kBAACM,GAAA,EAAD,CAAQzT,MAAI,EAACC,QAASA,GACjBsD,GAAW,kBAAC0H,GAAA,EAAD,MACZ,kBAACyI,GAAA,EAAD,KAAc5X,GACd,kBAAC6X,GAAA,EAAD,KACI,kBAAC,GAAD,iBACQhU,EADR,CAEImP,WAAW,QACXD,SAAU5O,EACVuP,SAAUF,Q,oSC5C9B,IAAMsE,GAAWpT,IAAH,MAsCCqT,GA3BC,SAAC,GAAmC,IAAjClX,EAAgC,EAAhCA,OAAQsD,EAAwB,EAAxBA,QAASuP,EAAe,EAAfA,SAAe,EACG5L,sBAAYgQ,IAAvDE,EADwC,oBAGzCb,EAAkBxO,uBACpB,SAACrH,EAAMQ,GAAP,MAAiB,CACb8G,UAAW,CACP/H,SACAS,OACAQ,WAGR,CAACjB,IAGL,OACI,kBAAC,GAAD,CACIb,MAAM,WACN6I,SAAUmP,EACVb,gBAAiBA,EACjBC,UAAU,UACV1D,SAAUA,EACVvP,QAASA,EACT2O,WAAW,S,ufC/BvB,I,GAAMmF,GAAWvT,IAAH,MAeRwT,GAAYxT,IAAH,MA0CAyT,GAlCE,SAAC,GAAqC,IAAnCjW,EAAkC,EAAlCA,GAAIZ,EAA8B,EAA9BA,KAAM6C,EAAwB,EAAxBA,QAASuP,EAAe,EAAfA,SAAe,EACjBnM,mBAAS0Q,GAAU,CAChDrP,UAAW,CAAE1G,QADTuF,EAD0C,EAC1CA,QAASJ,EADiC,EACjCA,MAAOM,EAD0B,EAC1BA,KAD0B,EAK/BG,sBAAYoQ,IAAxBE,EAL2C,oBAOlD5O,qBAAU,WACFnC,GAAOlD,MACZ,CAACkD,EAAOlD,IAEX,IAAMgT,EAAkBxO,uBAAY,SAACrH,EAAMQ,GAAP,MAAiB,CAAE8G,UAAW,CAAE1G,KAAIJ,WAAW,CAACI,IAEpF,OAAIuF,KAAW,OAACE,QAAD,IAACA,OAAD,EAACA,EAAM7F,MAEd,kBAACuW,GAAA,EAAD,CAAUnU,MAAI,EAAC+G,QAAS9G,GACpB,kBAACmU,GAAA,EAAD,CAAkBnO,MAAM,aAKhC,kBAAC,GAAD,CACInK,MAAM,YACN6I,SAAUuP,EACVjB,gBAAiBA,EACjBC,UAAU,UACV1D,SAAUA,EACVvP,QAASA,EACT2O,WAAW,OACXxR,KAAMA,EACNQ,KAAM6F,EAAK7F,QCJRyW,GAhDS,SAAC,GAAuB,IAArBvX,EAAoB,EAApBA,MAAOH,EAAa,EAAbA,OAAa,EACXoG,oBAAS,GADE,mBACpCuR,EADoC,KAC1BC,EAD0B,OAEXxR,mBAAS,MAFE,mBAEpCyR,EAFoC,KAE1BC,EAF0B,KAIrCC,EAAejQ,uBAAY,kBAAMgQ,EAAY,QAAO,CAACA,IAErDE,EAAiBlQ,uBAAY,kBAAM8P,GAAY,SAAAK,GAAC,OAAKA,OAAI,CAACL,IAE1DjF,EAAe7K,uBACjB,YAA0B,IAAvBzG,EAAsB,EAAtBA,GAAIZ,EAAkB,EAAlBA,KAAMtB,EAAY,EAAZA,MACTyY,GAAY,GACZE,EAAY3Y,EAAK,UAAMA,EAAN,oBAAyBsB,EAAzB,gBAAqCY,EAArC,aAErB,CAACuW,EAAaE,IAGlB,OACI,oCACI,kBAAC9G,GAAA,EAAD,CAAS7R,MAAM,YACX,kBAAC+K,EAAA,EAAD,CACIZ,MAAM,UACN2H,KAAK,QACLC,SAAUyG,EACVvN,QAAS4N,GAET,kBAAC,KAAD,CAAY7G,SAAS,YAG5BwG,GACG,kBAACO,GAAD,CACIlY,OAAQA,EACRG,MAAOA,EACPmD,QAAS0U,EACTnF,SAAUF,IAIjBkF,GACG,kBAACxL,GAAA,EAAD,CAAUhJ,MAAI,EAACoJ,iBAAkB,IAAMnJ,QAASyU,GAC5C,kBAACpL,GAAA,EAAD,CAAOrJ,QAASyU,EAAclL,SAAS,WAClCgL,M,qBCYVM,GAnDU,SAAC,GAAkB,IAAhB9W,EAAe,EAAfA,GAAIZ,EAAW,EAAXA,KACpBgC,EAAU2V,eAAV3V,MACF4V,EAAUC,eAFuB,EAGPlS,oBAAS,GAHF,mBAGhCuR,EAHgC,KAGtBC,EAHsB,OAIPxR,mBAAS,MAJF,mBAIhCyR,EAJgC,KAItBC,EAJsB,KAMjCC,EAAejQ,uBAAY,kBAAMgQ,EAAY,QAAO,CAACA,IACrDE,EAAiBlQ,uBAAY,kBAAM8P,GAAY,SAAAK,GAAC,OAAKA,OAAI,CAACL,IAE1DjF,EAAe7K,uBACjB,YAAsB,IAAnBrH,EAAkB,EAAlBA,KAAMtB,EAAY,EAAZA,MACLyY,GAAY,GACZE,EAAY3Y,EAAK,UAAMA,EAAN,qBAA0BsB,EAA1B,gBAAsCY,EAAtC,cAErB,CAACuW,EAAaE,EAAazW,IAS/B,OANAsH,qBAAU,YACF,OAAClG,QAAD,IAACA,OAAD,EAACA,EAAO8V,QACR9V,EAAM8V,OAASlX,GAAIuW,GAAY,GACnCS,EAAQxB,QAAQwB,EAAQvV,SAASJ,SAAjC,2BAAgDD,GAAhD,IAAuD8V,KAAM,WAC9D,QAAC9V,QAAD,IAACA,OAAD,EAACA,EAAO8V,KAAMlX,EAAIgX,EAAST,IAG1B,oCACI,kBAAC5G,GAAA,EAAD,CAAS7R,MAAM,QACX,kBAAC+K,EAAA,EAAD,CACIZ,MAAM,UACN2H,KAAK,QACLC,SAAUyG,EACVvN,QAAS4N,GAET,kBAAC,KAAD,CAAU7G,SAAS,YAI1BwG,GACG,kBAACa,GAAD,CAAUnX,GAAIA,EAAIZ,KAAMA,EAAM6C,QAAS0U,EAAgBnF,SAAUF,IAGpEkF,GACG,kBAACxL,GAAA,EAAD,CAAUhJ,MAAI,EAACoJ,iBAAkB,IAAMnJ,QAASyU,GAC5C,kBAACpL,GAAA,EAAD,CAAOrJ,QAASyU,EAAclL,SAAS,WAClCgL,MCjCVY,GAbU,SAAC,GAAyB,IAAvBhY,EAAsB,EAAtBA,KAAMY,EAAgB,EAAhBA,GAAIlB,EAAY,EAAZA,MAAY,EACrB+I,KAAjB5C,EADsC,EACtCA,OAAQ7I,EAD8B,EAC9BA,KAEhB,OAAK6I,GAAW7I,GAAQ0C,KAAK,OAAK1C,QAAL,IAAKA,OAAL,EAAKA,EAAM4D,IAGpC,oCACKZ,IAAS/C,cAAWC,KAAO,kBAAC,GAAD,CAAiBwC,MAAOA,EAAOH,OAAQqB,IAClEA,GAAM,kBAAC,GAAD,CAAkBZ,KAAMA,EAAMY,GAAIA,KALE,M,yCCaxCqX,GAjBG,SAAC,GAAmB,IAAjBrX,EAAgB,EAAhBA,GAAIE,EAAY,EAAZA,MACrB,OACI,kBAAC,IAAD,CACIoC,GAAIzB,EAAUE,KAAKf,GACnBiJ,MAAO,CACHqO,QAAS,OACTC,SAAU,SACVC,eAAgB,OAChBvP,MAAO,cAGX,kBAAC,KAAD,MACC/H,ICZPuX,GAAM,gBACPpb,cAAWC,IAAM,UAYPob,GATc,SAAC,GAAc,IAAZtY,EAAW,EAAXA,KACtBuY,EAAOzF,GAAU9S,GACvB,OACI,kBAACuQ,GAAA,EAAD,CAAS7R,MAAO2Z,GAAOrY,IAASA,GAC5B,kBAACuY,EAAD,CAAM7H,SAAS,QAAQ7G,MAAO,CAAE2O,QAAS,QCUtCC,GAlBK,SAAC,GAAyB,IAAvB7X,EAAsB,EAAtBA,GAAIZ,EAAkB,EAAlBA,KAAMtB,EAAY,EAAZA,MAC7B,OACI,kBAAC,IAAD,CACIwE,GAAIpB,EAAelB,GACnBiJ,MAAO,CACHqO,QAAS,OACTC,SAAU,SACVC,eAAgB,OAChBvP,MAAO,YACPqH,WAAY,WAGhB,kBAAC,GAAD,CAAsBlQ,KAAMA,IAC5B,0BAAM6J,MAAO,CAAE6O,WAAY,EAAGC,WAAY,WAAaja,KCIpDka,GAjBM,SAAC,GAAwB,EAAtBhY,GAAuB,IAAnBZ,EAAkB,EAAlBA,KAAMtB,EAAY,EAAZA,MAC9B,OACI,yBACImL,MAAO,CACHqO,QAAS,OACTC,SAAU,SACVC,eAAgB,OAChBvP,MAAO,QACPqH,WAAY,WAGhB,kBAAC,GAAD,CAAsBlQ,KAAMA,IAC5B,0BAAM6J,MAAO,CAAE6O,WAAY,EAAGC,WAAY,WAAaja,KCN7Dma,GAAYC,cAAW,iBAAO,CAChCnZ,KAAM,CAAEoZ,YAAa,GAAI3O,MAAO,QAChC4O,GAAI,CAAEd,QAAS,OAAQC,SAAU,SAAUc,cAAe,OAC1DC,GAAI,CAAEhB,QAAS,OAAQC,SAAU,SAAUc,cAAe,WAyB/CE,GAtBK,SAAC,GAUf,EATFvY,GASG,IARHlB,EAQE,EARFA,MACAC,EAOE,EAPFA,KACAyZ,EAME,EANFA,QACAC,EAKE,EALFA,aACAC,EAIE,EAJFA,YACA/Z,EAGE,EAHFA,OACAga,EAEE,EAFFA,YACAC,EACE,EADFA,WAEA,OAAI7Z,EAAa,kBAAC,GAAD,CAAsBK,KAAM/C,cAAWC,MAGpD,kBAAC,KAAD,CAAgBuc,QAASZ,MACrB,kBAAC,GAAD,CAAWjY,GAAIlB,EAAOoB,MAAO0Y,IAC5Bja,GAAU,kBAACma,GAAD,CAAO1Z,KAAM/C,cAAWC,IAAK0D,GAAIrB,EAAQb,MAAO6a,IAC1DH,GAAW,kBAAC,GAAD,CAAcpZ,KAAMsZ,EAAa1Y,GAAIwY,EAAS1a,MAAO2a,MCR9DM,GAnBQ,SAAC,GAAiE,IAA/D/Y,EAA8D,EAA9DA,GAAIlB,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,KAAMjB,EAA6C,EAA7CA,MAAOa,EAAsC,EAAtCA,OAAQga,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACnE,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI7Z,KAAMA,EACND,MAAOA,EACP8Z,WAAYA,EACZja,OAAQA,EACRga,YAAaA,EACbH,QAASxY,EACTyY,aAAc3a,EACd4a,YAAarc,cAAWC,MAE5B,kBAAC,GAAD,CAAkB8C,KAAM/C,cAAWC,IAAKwC,MAAOA,EAAOkB,GAAIA,IAC1D,kBAAC,GAAD,QCIGgZ,GAnBQ,SAAC,GAAuE,IAArEhZ,EAAoE,EAApEA,GAAIZ,EAAgE,EAAhEA,KAAMN,EAA0D,EAA1DA,MAAOC,EAAmD,EAAnDA,KAAMjB,EAA6C,EAA7CA,MAAOa,EAAsC,EAAtCA,OAAQga,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACzE,OACI,kBAAC,GAAD,KACI,kBAAC,GAAD,CACI7Z,KAAMA,EACND,MAAOA,EACP8Z,WAAYA,EACZja,OAAQA,EACRga,YAAaA,EACbH,QAASxY,EACTyY,aAAc3a,EACd4a,YAAatZ,IAEjB,kBAAC,GAAD,CAAkBA,KAAMA,EAAMN,MAAOA,EAAOkB,GAAIA,IAChD,kBAAC,GAAD,Q,qBC+CGiZ,GAtDa,SAAC,GAAmC,IAAjCjZ,EAAgC,EAAhCA,GAAIZ,EAA4B,EAA5BA,KAAMN,EAAsB,EAAtBA,MAAO+F,EAAe,EAAfA,SAAe,EACnCE,oBAAS,GAD0B,mBACpDmU,EADoD,KAC9CC,EAD8C,OAElCtR,KAAjB5C,EAFmD,EAEnDA,OAAQ7I,EAF2C,EAE3CA,KACVgd,EAAc3S,uBAAY,kBAAM0S,GAAQ,KAAO,CAACA,IAChDE,EAAa5S,uBAAY,kBAAM0S,GAAQ,KAAQ,CAACA,IAEtD,OACI,kBAACtK,GAAA,EAAD,CACI5F,MAAO,CAAEO,MAAO,MAAOd,SAAU,WAAYW,OAAQ,QAASiQ,SAAU,UACxEC,aAAcH,EACdI,aAAcH,GAEd,kBAACxK,GAAA,EAAD,CACI5F,MAAO,CACHqO,QAAS,OACTmC,eAAgB,SAChBnK,WAAY,SACZ5G,SAAU,WACVgR,IAAK,EACLC,MAAO,IAGVT,EACG,oCACI,kBAAC,GAAD,CAAmBpY,KAAMI,EAAelB,KACvCiF,GAAU7I,GAAQA,EAAK4D,KAAOlB,GAC3B,kBAAC6Q,GAAA,EAAD,CAAS7R,MAAM,QACX,kBAAC+K,EAAA,EAAD,CACI+G,KAAK,QACL3H,MAAM,UACNpG,UAAWC,IACXQ,GAAIpB,EAAelB,EAAI,CAAEkX,KAAMlX,KAE/B,kBAAC,KAAD,CAAU4P,KAAK,aAM/B,kBAAC,KAAD,OAGR,kBAACX,GAAA,EAAD,CAAMC,WAAS,EAACG,KAAK,UACjB,kBAACJ,GAAA,EAAD,CAAM2K,MAAI,EAAC3Q,MAAO,CAAEsG,QAAS,IACzB,kBAAC,GAAD,CAAsBnQ,KAAMA,KAEhC,kBAAC6P,GAAA,EAAD,CAAM2K,MAAI,EAAC3Q,MAAO,CAAEO,MAAO,QACtB3E,MC1CNgV,GAbK,SAAC,GAAsC,IAApCza,EAAmC,EAAnCA,KAAMY,EAA6B,EAA7BA,GAAIlB,EAAyB,EAAzBA,MAAOhB,EAAkB,EAAlBA,MAAOE,EAAW,EAAXA,KAC3C,OACI,kBAAC,GAAD,CAAqBoB,KAAMA,EAAMY,GAAIA,EAAIlB,MAAOA,GAC5C,kBAAC,IAAD,CAAMmK,MAAO,CAAEuO,eAAgB,OAAQvP,MAAO,QAAU3F,GAAIpB,EAAelB,IACvE,yBAAKiJ,MAAO,CAAE6G,SAAU,GAAIgK,WAAY,IAAKvK,QAAS,EAAGwK,cAAe,IACnEjc,GAEJE,GAAQ,yBAAKiL,MAAO,CAAE6G,SAAU,GAAI7H,MAAO,SAAWjK,MCmBxDgc,GA1BM,SAAC,GAAmC,IAAjCha,EAAgC,EAAhCA,GAAIlB,EAA4B,EAA5BA,MAAOM,EAAqB,EAArBA,KAASuC,EAAY,qCAC9C7D,EAAQ6D,EAAM7D,OAAS6D,EAAM3D,KAC7BA,EAAO2D,EAAM7D,MAAQ6D,EAAM3D,KAAO,KAExC,OACI,kBAAC,GAAD,CAAqBoB,KAAMA,EAAMY,GAAIA,EAAIlB,MAAOA,GAC5C,kBAAC,IAAD,CAAMmK,MAAO,CAAEuO,eAAgB,OAAQvP,MAAO,QAAU3F,GAAIpB,EAAelB,IACvE,yBACIiJ,MAAO,CACH6G,SAAU,GACVgK,WAAY,IACZvK,QAAS,EACTwK,cAAe,EACfhC,WAAY,SACZvO,MAAO,OACP8P,SAAU,WAGbxb,GAEJE,GAAQ,yBAAKiL,MAAO,CAAE6G,SAAU,GAAI7H,MAAO,SAAWjK,MCMxDic,GA1BM,SAAC,GAA2C,IAAzCja,EAAwC,EAAxCA,GAAIZ,EAAoC,EAApCA,KAAMN,EAA8B,EAA9BA,MAAOhB,EAAuB,EAAvBA,MAAOE,EAAgB,EAAhBA,KAAMM,EAAU,EAAVA,IAClD,OACI,kBAAC,GAAD,CAAqBc,KAAMA,EAAMY,GAAIA,EAAIlB,MAAOA,GAC5C,kBAAC,IAAD,CAAMmK,MAAO,CAAEuO,eAAgB,OAAQvP,MAAO,QAAU3F,GAAIpB,EAAelB,IACvE,yBAAKiJ,MAAO,CAAE6G,SAAU,GAAIgK,WAAY,IAAKvK,QAAS,EAAGwK,cAAe,IACnEjc,GAASE,GAAQM,IAG1B,uBACI0I,KAAM1I,EACN4b,OAAO,SACPtM,IAAI,WACJ3E,MAAO,CACH6G,SAAU,GACVqK,cAAe,IACf3C,eAAgB,OAChBvP,MAAO,OACP0K,aAAc,IAGjBrU,KCpBjB,0BACKjC,cAAWC,IAAMud,IADtB,gBAEKxd,cAAWE,KAAOyd,IAFvB,gBAGK3d,cAAWG,KAAOyd,IAHvB,ICIeG,GANO,SAAAzY,GAClB,IAAM0Y,EAAWC,GAAU3Y,EAAMvC,MAEjC,OAAO,kBAACib,EAAa1Y,I,yPCEzB,IAAM4Y,GAAY/X,IAAH,MA+BAgY,GAnBQ,SAAC,GAA6B,IAA3Bzb,EAA0B,EAA1BA,KAAMD,EAAoB,EAApBA,MAAOH,EAAa,EAAbA,OAAa,EACf0G,mBAASkV,GAAW,CACjD7T,UAAW,CAAEhG,MAAO,CAAE3B,OAAMD,QAAOH,SAAQa,MAAO,IAAKib,KAAM,CAAEjc,SAAS,OADpE+G,EADwC,EACxCA,QAASJ,EAD+B,EAC/BA,MAAOM,EADwB,EACxBA,KAIxB,OACI,kBAACoJ,GAAA,EAAD,KACKtJ,GAAW,kBAAC0H,GAAA,EAAD,OACV9H,GAASM,GACP,kBAACrD,EAAA,EAAD,KACKqD,EAAKvJ,MAAMU,KAAI,SAAAgD,GAAI,OAChB,kBAAC,GAAD,eAAe/C,IAAK+C,EAAKI,IAAQJ,EAAjC,CAAuCd,MAAOA,WCVvD4b,GAjBG,SAAC,GAAiE,IAA/D3b,EAA8D,EAA9DA,KAAMiB,EAAwD,EAAxDA,GAAIlB,EAAoD,EAApDA,MAAOhB,EAA6C,EAA7CA,MAAOa,EAAsC,EAAtCA,OAAQga,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WAC9D,OACI,oCACI,kBAAC+B,GAAD,CACI7b,MAAOA,EACPhB,MAAOA,EACPkC,GAAIA,GAAM,KACVrB,OAAQA,EACRga,YAAaA,EACb5Z,KAAMA,EACN6Z,WAAYA,IAEhB,kBAAC,GAAD,CAAgB7Z,KAAMA,EAAMD,MAAOA,EAAOH,OAAQqB,M,2RCV9D,IAAM+V,GAAWvT,IAAH,MAeRyG,GAAQ,CACVqO,QAAS,QACTsD,SAAU,MACVvR,OAAQ,YAwBGwR,GArBF,SAAC,GAAY,IAAV7a,EAAS,EAATA,GAAS,EACYqF,mBAAS0Q,GAAU,CAAErP,UAAW,CAAE1G,QAA3DuF,EADa,EACbA,QAAgBE,GADH,EACJN,MADI,EACGM,MAExB,OACI,kBAACoJ,GAAA,EAAD,KACKtJ,GAAW,kBAAC0H,GAAA,EAAD,OACP,OAAJxH,QAAI,IAAJA,OAAA,EAAAA,EAAM7F,OACH,oCACK6F,EAAK7F,KAAK9B,OAAS,wBAAImL,MAAK,eAAOA,KAAUxD,EAAK7F,KAAK9B,OACvD2H,EAAK7F,KAAK5B,MAAQ,uBAAGiL,MAAK,eAAOA,KAAUxD,EAAK7F,KAAK5B,MACrDyH,EAAK7F,KAAKtB,KACP,uBAAG0I,KAAMvB,EAAK7F,KAAKtB,IAAKwc,OAAO,SAAS7R,MAAK,eAAOA,KAC/CxD,EAAK7F,KAAKtB,QCjBxByc,GAlBE,SAAC,GAAuE,IAArEhc,EAAoE,EAApEA,KAAMiB,EAA8D,EAA9DA,GAAIZ,EAA0D,EAA1DA,KAAMN,EAAoD,EAApDA,MAAOhB,EAA6C,EAA7CA,MAAOa,EAAsC,EAAtCA,OAAQga,EAA8B,EAA9BA,YAAaC,EAAiB,EAAjBA,WACnE,OACI,oCACI,kBAACoC,GAAD,CACIlc,MAAOA,EACPhB,MAAOA,EACPkC,GAAIA,GAAM,KACVZ,KAAMA,EACNT,OAAQA,EACRga,YAAaA,EACb5Z,KAAMA,EACN6Z,WAAYA,IAEhB,kBAAC,GAAD,CAAM5Y,GAAIA,MCePib,GAvBG,SAAC,GAA2B,IAAhBC,EAAe,EAAxB1W,MAAS0W,OAAe,EACNnM,GAAiBmM,GAA5C3V,EADiC,EACjCA,QAASJ,EADwB,EACxBA,MAAOnE,EADiB,EACjBA,OAExB,OACI,kBAAC,GAAD,KACKuE,GAAW,kBAAC0H,GAAA,EAAD,OACV1H,IAAYJ,IAAUnE,IACpB,kBAACsK,GAAA,EAAD,CAAOE,SAAS,SAAUrG,GAASA,EAAMrC,SAAY,kBAExD9B,GACG,kBAACiO,GAAA,EAAD,CAAMC,WAAS,EAACiM,QAAS,GACrB,kBAAClM,GAAA,EAAD,CAAM2K,MAAI,EAACwB,GAAI,GACX,kBAAC,GAAD,CAAapa,OAAQA,KAEzB,kBAACiO,GAAA,EAAD,CAAM2K,MAAI,EAACwB,GAAI,GACX,kBAAC,GAAD,CAAWrc,MAAI,EAACD,MAAOkC,Q,uWCf/C,IAAM+U,GAAWvT,IAAH,MAkBR6Y,GAAiB,SAAC,GAAwC,IAAtCrb,EAAqC,EAArCA,GAAIZ,EAAiC,EAAjCA,KAAMtB,EAA2B,EAA3BA,MAAOgB,EAAoB,EAApBA,MAAOH,EAAa,EAAbA,OACxCgD,EAAQ,CACV3B,KACAZ,OACAtB,QACAiB,MAAM,EACND,MAAK,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAOkB,GACd4Y,WAAY9Z,EAAMoB,MAClBvB,OAAM,OAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAQqB,GAChB2Y,YAAW,OAAEha,QAAF,IAAEA,OAAF,EAAEA,EAAQb,OAGzB,OAAOsB,IAAS/C,cAAWC,IAAM,kBAAC,GAAcqF,GAAY,kBAAC,GAAaA,IAoB/D2Z,GAjBI,WAAO,IAERna,EACVoa,eADAL,OAAU/Z,OAFO,EAKYkE,mBAAS0Q,GAAU,CAChDrP,UAAW,CAAEvF,YADToE,EALa,EAKbA,QAASJ,EALI,EAKJA,MAAOM,EALH,EAKGA,KAIxB,OACI,kBAAC,GAAD,KACKF,GAAW,kBAAC0H,GAAA,EAAD,OACV9H,IAAD,OAAUM,QAAV,IAAUA,OAAV,EAAUA,EAAM7F,OAAQ,kBAAC,GAAmB6F,EAAK7F,QC/C/C4b,GAJM,SAAC,GAAkB,IAAhB3W,EAAe,EAAfA,SACpB,OAAO,kBAAC0E,GAAA,EAAD,CAAWqR,SAAS,MAAM/V,I,kDCMtB8F,GANI,WAAO,IACd8Q,EAAW5H,eAAX4H,OACR,OAAKA,EACE,kBAACnQ,GAAA,EAAD,CAAOE,SAAS,SAASiQ,GADZ,MCuDTC,GAlDgB,WAC3B,IAAM1E,EAAUC,eACR7V,EAAU2V,eAAV3V,MACA+F,EAAiBU,KAAjBV,aACRqH,GAAQ,CAAE1Q,MAAO,eAAgByP,KAAM,mBAEvC,IAAM+D,EAAe7K,sBAAW,uCAC5B,WAAO8K,EAAP,sBAAA3K,EAAA,6DAAiB6N,EAAjB,EAAiBA,cAAekH,EAAhC,EAAgCA,UAAWhQ,EAA3C,EAA2CA,UACvC8I,GAAc,GADlB,kBAGctN,EAAaoK,EAAD,OAASnQ,QAAT,IAASA,OAAT,EAASA,EAAOG,SAH1C,uDAKY,KAAE3E,KAAOF,OAAOC,KAAK,KAAEC,KAAKa,OAC5BkO,EAAU,KAAE/O,KAEZ+e,EAAU,KAAE7Y,SAEhB2R,GAAc,GAVtB,yDAD4B,wDAc5B,CAACtN,EAAc6P,EAAf,OAAwB5V,QAAxB,IAAwBA,OAAxB,EAAwBA,EAAOG,UAGnC,OACI,oCACI,kBAACqa,GAAA,EAAD,CAAY9d,MAAM,iBAClB,kBAACiX,GAAA,EAAD,KACI,kBAAC,KAAD,CACI1E,cAAe,CAAEnQ,MAAO,GAAI2b,SAAU,GAAIC,gBAAiB,IAC3DtK,SAAUF,EACVoD,iBAAkBqH,iBAElB,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAW9I,KAAK,QAAQJ,MAAM,QAAQK,KAAK,OAAO/U,UAAQ,IAC1D,kBAAC,GAAD,CAAW8U,KAAK,WAAWJ,MAAM,WAAWK,KAAK,OAAO/U,UAAQ,IAChE,kBAAC,GAAD,CACI8U,KAAK,kBACLJ,MAAM,mBACNK,KAAK,OACL/U,UAAQ,IAEZ,kBAAC,GAAD,WCAT6d,GA1CS,WAAO,IACnB5a,EAAU2V,eAAV3V,MACAlB,EAAU2H,KAAV3H,MACRsO,GAAQ,CAAE1Q,MAAO,QAASyP,KAAM,mBAEhC,IAAM+D,EAAe7K,sBAAW,uCAC5B,WAAO8K,EAAP,sBAAA3K,EAAA,6DAAiB6N,EAAjB,EAAiBA,cAAekH,EAAhC,EAAgCA,UAAWhQ,EAA3C,EAA2CA,UACvC8I,GAAc,GADlB,kBAGcvU,EAAMqR,EAAD,OAASnQ,QAAT,IAASA,OAAT,EAASA,EAAOG,SAHnC,uDAKY,KAAE3E,KAAOF,OAAOC,KAAK,KAAEC,KAAKa,OAC5BkO,EAAU,KAAE/O,KAEZ+e,EAAU,KAAE7Y,SAEhB2R,GAAc,GAVtB,yDAD4B,wDAc5B,CAACvU,EAAD,OAAQkB,QAAR,IAAQA,OAAR,EAAQA,EAAOG,UAGnB,OACI,oCACI,kBAACqa,GAAA,EAAD,CAAY9d,MAAM,kBAClB,kBAACiX,GAAA,EAAD,KACI,kBAAC,KAAD,CACI1E,cAAe,CAAEnQ,MAAO,GAAI2b,SAAU,IACtCrK,SAAUF,EACVoD,iBAAkBuH,UAElB,kBAAC,KAAD,KACI,kBAAC,GAAD,MACA,kBAAC,GAAD,CAAWhJ,KAAK,QAAQJ,MAAM,QAAQK,KAAK,OAAO/U,UAAQ,IAC1D,kBAAC,GAAD,CAAW8U,KAAK,WAAWJ,MAAM,WAAWK,KAAK,OAAO/U,UAAQ,IAChE,kBAAC,GAAD,W,UCgBT+d,GApDU,WAAO,IAAD,EACDnX,mBAAS,MADR,mBACpBI,EADoB,KACbC,EADa,OAEGL,oBAAS,GAFZ,mBAEpBQ,EAFoB,KAEX4P,EAFW,KAGrB6B,EAAUC,eACR7V,EAAU2V,eAAV3V,MACAgG,EAAWS,KAAXT,OACRoH,GAAQ,CAAE1Q,MAAO,SAAUyP,KAAM,mBAEjC,IAAM4O,EAAW,CACb9a,UAAe,OAALD,QAAK,IAALA,OAAA,EAAAA,EAAOG,UAAW,IAC5BH,MAAO,MAGLgb,EAAgB3V,sBAAW,sBAAC,sBAAAG,EAAA,6DAC9BuO,GAAW,GADmB,kBAGpB/N,EAAO,KAAD,OAAO+U,QAAP,IAAOA,OAAP,EAAOA,EAAU9a,UAHH,uDAK1B+D,EAAS,KAAEtC,SACXqS,GAAW,GANe,yDAQ/B,CAAC/N,EAAQ4P,EAASmF,EAAS9a,SAAU8T,EAAY/P,IAEpD,OACI,oCACI,kBAACwW,GAAA,EAAD,CAAY9d,MAAM,SAASue,UAAU,UACrC,kBAACtH,GAAA,EAAD,KACK5P,GAAS,kBAACmG,GAAA,EAAD,CAAOE,SAAS,SAASrG,GACnC,kBAACmX,GAAA,EAAD,CAAarT,MAAO,CAAEqO,QAAS,OAAQmC,eAAgB,WACnD,kBAACzR,EAAA,EAAD,CACI1F,GAAI6Z,EACJta,UAAWC,IACX8G,QAAQ,WACRK,MAAO,CAAEQ,SAAU,MAJvB,QAQA,kBAACzB,EAAA,EAAD,CACIY,QAAQ,YACRX,MAAM,YACNgB,MAAO,CAAEQ,SAAU,KACnBV,QAASqT,EACTvM,SAAUtK,GALd,YCxCLgX,GAJK,SAAA5a,GAChB,OAAO,kBAAC,KAAUA,ICUP6a,GAVM,SAAC,GAAuD,IAAD,IAApDlY,gBAAoD,MAAzC,IAAyC,EAAzBmY,EAAyB,EAApC5a,UAAyB6a,EAAW,wCAGxE,OAFmB7U,KAAX5C,OAGJ,kBAAC,KAAD,iBAAWyX,EAAX,CAAiB7a,UAAW4a,KAE5B,kBAAC,KAAD,iBAAWC,EAAX,CAAiBC,OAAQ,kBAAM,kBAAC,KAAD,CAAUra,GAAIgC,SCItCsY,GAVQ,SAAC,GAAuD,IAAD,IAApDtY,gBAAoD,MAAzC,IAAyC,EAAzBmY,EAAyB,EAApC5a,UAAyB6a,EAAW,0CAC9C7U,KAApB5C,EADkE,EAClEA,OADkE,EAC1DM,QAEhB,OAAQN,EAGJ,kBAAC,KAAD,iBAAWyX,EAAX,CAAiBC,OAAQ,kBAAM,kBAAC,KAAD,CAAUra,GAAIgC,QAF7C,kBAAC,KAAD,iBAAWoY,EAAX,CAAiB7a,UAAW4a,MCiCrBI,GA5BI,SAAC,GAA6B,IAAfzb,EAAc,EAA1BK,SAAYL,MAC9B,OACI,kBAAC,GAAD,KACI,kBAAC0T,GAAA,EAAD,KACI,kBAAC,KAAD,KACI,kBAAC,GAAD,CACIhU,KAAMQ,EAAwBR,KAC9Be,UAAW6Z,KAEf,kBAAC,GAAD,CAAgB5a,KAAMQ,EAAiBR,KAAMe,UAAWma,KACxD,kBAAC,GAAD,CAAclb,KAAMQ,EAAkBR,KAAMe,UAAWqa,KACvD,kBAAC,KAAD,CAAU5Z,GAAG,OAEjB,kBAACwa,GAAA,EAAD,KACK1b,GAASA,EAAMG,SAA6B,MAAlBH,EAAMG,SAC7B,kBAAC,IAAD,CAAMe,GAAIlB,EAAMG,SACZ,kBAAC,KAAD,OAGR,kBAACyG,EAAA,EAAD,CAAQ1F,GAAG,IAAIT,UAAWC,KAA1B,YCNLib,OAff,WACI,OACI,kBAAC,GAAD,KACI,kBAAC,KAAD,KACI,kBAAC,GAAD,CAAajc,KAAML,EAAgBuc,OAAK,EAACnb,UAAW+H,KACpD,kBAAC,GAAD,CAAa9I,KAAMH,EAAiBqc,OAAK,EAACnb,UAAWmL,KACrD,kBAAC,GAAD,CAAalM,KAAMD,EAAUC,KAAMkc,OAAK,EAACnb,UAAWoZ,KACpD,kBAAC,GAAD,CAAana,KAAMI,EAAgB8b,OAAK,EAACnb,UAAWyZ,KACpD,kBAAC,GAAD,CAAaxa,KAAMQ,EAAiBO,UAAWgb,KAC/C,kBAAC,KAAD,CAAUva,GAAI7B,SCRVwc,QACa,cAA7Bzb,OAAOC,SAASyb,UAEiB,UAA7B1b,OAAOC,SAASyb,UAEhB1b,OAAOC,SAASyb,SAAS1Y,MAAM,2DCZvC2Y,IAASR,OAEL,kBAAC,GAAD,MAEAxT,SAASiU,eAAe,SDsHpB,kBAAmBC,WACnBA,UAAUC,cAAcC,MACnBre,MAAK,SAAAiI,GACFA,EAAaqW,gBAEhBC,OAAM,SAAAtY,GACHqC,QAAQrC,MAAMA,EAAMrC,a,mBErIpC,IAAMxF,EAAMxB,EAAQ,IACZgB,EAAkBhB,EAAQ,IAA1BgB,cAEFiD,EAAazC,EACdE,SACAO,IAAIjB,EAAcC,WAClB2gB,IAAI5gB,EAAcE,WAClB2gB,QAAQ7gB,EAAcG,aAErBiD,EAAQ5C,EAAIM,SAASC,MAAM,CAC7BqC,MAAOH,EACP8b,SAAUve,EACLE,SACAO,IAAIjB,EAAcI,cAClBwgB,IAAI5gB,EAAcK,cAClBwgB,QAAQ7gB,EAAcM,kBAGzB+J,EAAejH,EAAMhC,OACvBZ,EAAIM,SAASC,MAAM,CACfie,gBAAiBxe,EAAIE,SAASogB,KAAK,QAAS,0BAA0B,WAClE,OAAOC,KAAKlf,OAAOkd,UAAYgC,KAAKlf,OAAOmd,sBAKvDlgB,EAAQmE,WAAaA,EACrBnE,EAAQsE,MAAQA,EAChBtE,EAAQuL,aAAeA,I","file":"static/js/main.5bd56767.chunk.js","sourcesContent":["exports.sortDates = require('./sortDates')\nexports.notesInput = require('./notesInput')\nexports.notesInputQuery = require('./notesInputQuery')\nexports.strictNotesInput = require('./strictNotes')\nexports.notes = require('./strictNotes/schemas')\nexports.auth = require('./auth')\nexports.user = require('./user')\n","exports.NOTE_TYPES = {\n    DIR: 'dir',\n    TEXT: 'text',\n    LINK: 'link',\n}\n\nexports.NOTE_TYPES_ARR = Object.keys(exports.NOTE_TYPES).map(key => exports.NOTE_TYPES[key])\n\nexports.USER_SETTINGS = {\n    MIN_LOGIN: 3,\n    MAX_LOGIN: 20,\n    MATCH_LOGIN: /^[a-z0-9_-]*$/,\n    MIN_PASSWORD: 6,\n    MAX_PASSWORD: 50,\n    MATCH_PASSWORD: /^[a-zA-Z0-9_-]*$/,\n}\n\nexports.SESSION_MAX_AGE = 1000 * 60 * 60\n","const yup = require('yup')\n\nmodule.exports = yup.string().length(24)\n","const yup = require('yup')\nconst { NOTE_TYPES_ARR } = require('@nbs/global')\n\nmodule.exports = yup.string().oneOf(NOTE_TYPES_ARR)\n","const yup = require('yup')\nconst { NOTE_TYPES } = require('@nbs/global')\n\nconst core = yup.object().shape({\n    title: yup.string().min(3),\n    text: yup.string().min(3),\n})\n\nconst dirSchema = core.concat(\n    yup.object().shape({\n        title: yup.string().required(),\n    }),\n)\n\nconst textSchema = core.concat(\n    yup.object().shape({\n        text: yup.string().required(),\n    }),\n)\n\nconst linkSchema = core.concat(\n    yup.object().shape({\n        url: yup\n            .string()\n            .url()\n            .required(),\n        img: yup.string().url(),\n    }),\n)\n\nmodule.exports = {\n    [NOTE_TYPES.DIR]: dirSchema,\n    [NOTE_TYPES.TEXT]: textSchema,\n    [NOTE_TYPES.LINK]: linkSchema,\n}\n","const yup = require('yup')\n\nmodule.exports = yup.object().shape({\n    created: yup.bool(),\n    updated: yup.bool(),\n})\n","const yup = require('yup')\n\nmodule.exports = yup.object().shape({\n    title: yup.string(),\n    text: yup.string(),\n    parent: yup.string(),\n    url: yup.string().url(),\n    img: yup.string().url(),\n})\n","const yup = require('yup')\nconst noteKind = require('./types/noteKind')\nconst objectId = require('./types/objectId')\n\nmodule.exports = yup.object().shape({\n    owner: objectId.required(),\n    root: yup.bool(),\n    parent: objectId.when('root', {\n        is: true,\n        then: () => objectId,\n        otherwise: () => objectId.required(),\n    }),\n    kind: noteKind,\n    skip: yup\n        .number()\n        .min(0)\n        .integer(),\n    limit: yup\n        .number()\n        .positive()\n        .integer(),\n})\n","const yup = require('yup')\nconst noteKind = require('../types/noteKind')\nconst schemas = require('./schemas')\nconst objectId = require('../types/objectId')\n\nexports = module.exports = yup.object().shape({\n    kind: noteKind.required(),\n    parent: objectId.nullable(),\n    note: yup.object().when('kind', kind => {\n        if (!schemas[kind]) throw new Error(`Schema [kind: ${kind}] not found!`)\n        return schemas[kind]\n    }),\n})\n","exports.getOne = require('./getOne')\n","const yup = require('yup')\nconst objectId = require('../types/objectId')\nconst { loginField } = require('../auth')\n\nmodule.exports = yup.object().shape({\n    id: objectId.when('login', {\n        is: l => !!l,\n        otherwise: objectId.required(),\n    }),\n    login: loginField,\n})\n","import qs from 'qs'\n\nexport const queryLink = obj =>\n    qs.stringify(obj, { addQueryPrefix: true, strictNullHandling: true })\n\nexport const homeRoute = {\n    path: '/',\n    link: query => `/${queryLink(query)}`,\n}\n\nexport const usersRoute = {\n    path: '/users',\n    link: offset => `/users${queryLink({ offset })}`,\n}\n\nexport const userRoute = {\n    path: ['/_:userId', '/_/:userLogin'],\n    link: (userId, userLogin) => (userId ? `/_${userId}` : `/_/${userLogin}`),\n}\n\nexport const noteRoute = {\n    path: '/~/:noteId',\n    link: (noteId, state) => (state ? { pathname: `/~/${noteId}`, state } : `/~/${noteId}`),\n}\n\nexport const entryRoute = {\n    path: '/entry',\n    link: () => '/',\n    login: {\n        path: '/entry/login',\n        link: () => ({ pathname: '/entry/login', state: { referer: window.location.pathname } }),\n    },\n    registration: {\n        path: '/entry/registration',\n        link: () => ({\n            pathname: '/entry/registration',\n            state: { referer: window.location.pathname },\n        }),\n    },\n    logout: {\n        path: '/entry/logout',\n        link: () => ({ pathname: '/entry/logout', state: { referer: window.location.pathname } }),\n    },\n}\n","import React from 'react'\nimport Drawer from '@material-ui/core/Drawer'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport { Link } from 'react-router-dom'\nimport { usersRoute, homeRoute } from 'helpers/routes'\n\nconst ListItemLink = props => <ListItem button component={Link} {...props} />\n\nconst Menu = ({ open, onClose }) => {\n    return (\n        <Drawer anchor=\"left\" open={open} onClose={onClose}>\n            <List component=\"nav\" aria-label=\"secondary mailbox folders\">\n                <ListItemLink to={homeRoute.link()}>Home</ListItemLink>\n                <ListItemLink to={usersRoute.link()}>Users</ListItemLink>\n            </List>\n        </Drawer>\n    )\n}\n\nexport default Menu\n","import gql from 'graphql-tag'\n\nexport const ME_QUERY = gql`\n    {\n        me {\n            is\n            user {\n                id\n                login\n            }\n        }\n    }\n`\n\nexport const REGISTRATION_MUTATION = gql`\n    mutation($login: String!, $password: String!, $confirmPassword: String!) {\n        result: registration(login: $login, password: $password, confirmPassword: $confirmPassword)\n    }\n`\n\nexport const LOGIN_MUTATION = gql`\n    mutation($login: String!, $password: String!) {\n        result: login(login: $login, password: $password)\n    }\n`\n\nexport const LOGOUT_MUTATION = gql`\n    mutation {\n        result: logout\n    }\n`\n\nexport const AUTH_SUBSCRIBE = gql`\n    subscription {\n        auth {\n            is\n            user {\n                id\n                login\n            }\n        }\n    }\n`\n","import gqlCodes from '@nerjs/errors/lib/gqlCodes'\n\nclass GqlClientError extends Error {\n    constructor(message, path, _ext = {}) {\n        super(message)\n\n        const { exception, ...ext } = _ext\n\n        this.serverData = {\n            path,\n            ...(exception || {}),\n        }\n\n        Object.keys(ext).forEach(key => {\n            this[key] = ext[key]\n        })\n\n        this.code = ext?.code || 'CLIENT_ERROR'\n    }\n}\n\nexport const equalPaths = (firstPath, secondPath, recursive) => {\n    if (Array.isArray(firstPath)) return equalPaths(firstPath.join('.'), secondPath, recursive)\n    if (Array.isArray(secondPath)) return equalPaths(firstPath, secondPath.join('.'), recursive)\n\n    return recursive ? firstPath.search(secondPath) === 0 : firstPath === secondPath\n}\n\nexport const getError = (err, needPath, code, defaultMessage, recursive) => {\n    const { message, path, extensions } =\n        (err.graphQLErrors || []).find(\n            gErr => equalPaths(gErr.path, needPath, recursive) && gErr?.extensions?.code === code,\n        ) || new Error(defaultMessage)\n\n    return new GqlClientError(message, path, extensions)\n}\n\nexport const getValidationError = (err, path, defaultMessage) =>\n    getError(err, path, gqlCodes.VALIDATION, defaultMessage, false)\n","import { useState, useEffect, useCallback } from 'react'\nimport { useQuery, useMutation, useSubscription } from '@apollo/react-hooks'\nimport {\n    ME_QUERY,\n    REGISTRATION_MUTATION,\n    LOGIN_MUTATION,\n    LOGOUT_MUTATION,\n    AUTH_SUBSCRIBE,\n} from './queries'\nimport { getValidationError } from 'helpers/filterError'\n\nconst getRedirectUrl = (redirect = '/') => {\n    const fullLink = `${redirect}`.match(/^https?:\\/\\//)\n\n    return fullLink ? redirect : `${window.location.origin}${redirect}`\n}\n\nexport default () => {\n    const [user, setUser] = useState(null)\n    const [isAuth, setIsAuth] = useState(false)\n    const [error, setError] = useState(null)\n\n    const { loading: meLoading, error: meError, data, refetch: meRefetch } = useQuery(ME_QUERY)\n\n    const [gqlRegistration, { data: registrationData, loading: regLoading }] = useMutation(\n        REGISTRATION_MUTATION,\n    )\n    const [gqlLogin, { data: loginData, loading: loginLoading }] = useMutation(LOGIN_MUTATION)\n    const [gqlLogout, { data: logoutData, loading: logoutLoading }] = useMutation(LOGOUT_MUTATION)\n    const { data: subData } = useSubscription(AUTH_SUBSCRIBE)\n\n    const refetchMeQuery = useCallback(\n        async (variables, mutation, redirect) => {\n            setError(null)\n\n            try {\n                const result = await mutation({ variables })\n                meRefetch().then(mrData => {\n                    setIsAuth(!!mrData?.data?.me?.is)\n                    window.location.href = getRedirectUrl(redirect)\n                })\n                return result?.data?.result\n            } catch (err) {\n                setError(err)\n\n                throw getValidationError(err, 'result', 'Validation error')\n            }\n        },\n        [meRefetch, setError, setIsAuth],\n    )\n\n    const registration = useCallback(\n        (variables, redirect) => refetchMeQuery(variables, gqlRegistration, redirect),\n        [gqlRegistration, refetchMeQuery],\n    )\n    const login = useCallback(\n        (variables, redirect) => refetchMeQuery(variables, gqlLogin, redirect),\n        [gqlLogin, refetchMeQuery],\n    )\n    const logout = useCallback(\n        (variables, redirect) => refetchMeQuery(variables, gqlLogout, redirect),\n        [gqlLogout, refetchMeQuery],\n    )\n\n    const clearError = useCallback(() => setError(null), [setError])\n\n    useEffect(() => {\n        if (meError || !data || !data.me || !data.me.is) {\n            setIsAuth(false)\n            setUser(null)\n        } else {\n            setIsAuth(!!data.me.is)\n            setUser(data.me.user || null)\n        }\n    }, [meError, data, setUser, setIsAuth])\n\n    const loading = !!(meLoading || regLoading || loginLoading || logoutLoading)\n\n    useEffect(() => {\n        if (!subData?.auth || loading) return\n\n        if (subData?.auth?.is === isAuth && subData?.auth?.user) {\n            setUser(subData.auth.user)\n        } else if (!registrationData && !loginData && !logoutData && subData.auth?.is !== isAuth) {\n            setTimeout(() => {\n                window.location.href = window.location.href\n            }, 1000)\n        }\n        console.log(\n            subData?.auth?.is === isAuth && subData?.auth?.user,\n            !registrationData && !loginData && !logoutData && subData.auth?.is !== isAuth,\n        )\n    }, [isAuth, registrationData, loginData, logoutData, subData, loading, setUser, logout])\n\n    return {\n        loading,\n        error,\n        user,\n        isAuth,\n        registration,\n        login,\n        logout,\n        clearError,\n    }\n}\n","import React from 'react'\nimport { createContext } from 'react'\nimport useAuthContext from './useAuthContext'\n\nexport const AuthContext = createContext({})\n\nconst AuthProvider = ({ children }) => {\n    const contextValue = useAuthContext()\n    return <AuthContext.Provider value={contextValue}>{children}</AuthContext.Provider>\n}\n\nexport default AuthProvider\n","import { useContext } from 'react'\nimport { AuthContext } from 'data/Auth'\n\nconst useAuth = () => {\n    const context = useContext(AuthContext)\n\n    return context\n}\n\nexport default useAuth\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { Link } from 'react-router-dom'\nimport { entryRoute, userRoute } from 'helpers/routes'\nimport useAuth from 'hooks/useAuth'\n\nconst AuthLinks = ({ user: { id, login } }) => (\n    <>\n        <Button color=\"inherit\" to={userRoute.link(id)} component={Link}>\n            {login}\n        </Button>\n        <Button color=\"inherit\" to={entryRoute.logout.link()} component={Link}>\n            Logout\n        </Button>\n    </>\n)\n\nconst NotAuthLinks = () => (\n    <>\n        <Button color=\"inherit\" to={entryRoute.registration.link()} component={Link}>\n            Registration\n        </Button>\n        <Button color=\"inherit\" to={entryRoute.login.link()} component={Link}>\n            Login\n        </Button>\n    </>\n)\n\nconst UserHeaderMenu = () => {\n    const { isAuth, user } = useAuth()\n    return isAuth ? <AuthLinks user={user} /> : <NotAuthLinks />\n}\n\nexport default UserHeaderMenu\n","import React, { useState, useCallback } from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport Toolbar from '@material-ui/core/Toolbar'\nimport Typography from '@material-ui/core/Typography'\nimport IconButton from '@material-ui/core/IconButton'\nimport MenuIcon from '@material-ui/icons/Menu'\nimport Menu from './menu'\nimport UserHeaderMenu from './userMenu'\n\nconst Header = () => {\n    const [menuOpen, setMenuOpen] = useState(false)\n    const switchMenu = useCallback(() => setMenuOpen(o => !o), [setMenuOpen])\n\n    return (\n        <>\n            <AppBar position=\"static\">\n                <Toolbar variant=\"dense\">\n                    <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={switchMenu}>\n                        <MenuIcon />\n                    </IconButton>\n                    <Typography style={{ flexGrow: 1 }} variant=\"h6\">\n                        News\n                    </Typography>\n                    <UserHeaderMenu />\n                </Toolbar>\n            </AppBar>\n            <Menu open={menuOpen} onClose={switchMenu} />\n        </>\n    )\n}\n\nexport default Header\n","import React from 'react'\nimport Header from 'components/header'\nimport Container from '@material-ui/core/Container'\n\ndocument.body.style.margin = 0\n\nconst PageWrapper = ({ children }) => {\n    return (\n        <Container\n            style={{\n                width: '100vw',\n                minWidth: '100vw',\n                paddingRight: 0,\n                paddingLeft: 0,\n            }}\n        >\n            <Header />\n            {children}\n        </Container>\n    )\n}\n\nexport default PageWrapper\n","import React from 'react'\nimport PageWrapper from 'components/wrappers/PageWrapper'\nimport useAuth from 'hooks/useAuth'\n\nconst HomeRoute = () => {\n    const auth = useAuth()\n    return (\n        <PageWrapper>\n            <h1>Home</h1>\n            <hr />\n            <br />\n            <pre>{JSON.stringify(auth, null, 3)}</pre>\n        </PageWrapper>\n    )\n}\n\nexport default HomeRoute\n","import GqlProvider from '@nerjs/gql/provider'\nimport React from 'react'\n\nconst {\n    REACT_APP_API_SERVER_HOST,\n    REACT_APP_API_SERVER_PORT,\n    REACT_APP_API_SERVER_PATH,\n    REACT_APP_SUBSCRIBE_SERVER_PATH,\n} = process.env\n\nconst urlGql = `${window.location.protocol}//${REACT_APP_API_SERVER_HOST}:${REACT_APP_API_SERVER_PORT}${REACT_APP_API_SERVER_PATH}`\nconst wsUrlGql = `ws://${REACT_APP_API_SERVER_HOST}:${REACT_APP_API_SERVER_PORT}${REACT_APP_SUBSCRIBE_SERVER_PATH}`\n\nconst GqlDataProvider = ({ children }) => {\n    return (\n        <GqlProvider\n            uri={urlGql}\n            wsUri={wsUrlGql}\n            httpOptions={{\n                credentials: 'include',\n            }}\n        >\n            {children}\n        </GqlProvider>\n    )\n}\n\nexport default GqlDataProvider\n","import React, { useState, useEffect, useCallback } from 'react'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport useGqlErrors from '@nerjs/gql/useGqlErrors'\nimport ClientGqlError from '@nerjs/errors/ClientGqlError'\n\nconst AlertError = ({ error, onClose, idx }) => {\n    const handlerClose = useCallback(\n        (event, reason) => (!reason || reason === 'timeout') && onClose(error),\n        [error, onClose],\n    )\n\n    return (\n        <Snackbar\n            open\n            anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\n            autoHideDuration={15000}\n            onClose={handlerClose}\n            style={{\n                transform: `translateY(-${100 * idx + 15 * idx}%)`,\n            }}\n        >\n            <Alert elevation={6} severity=\"error\" onClose={handlerClose}>\n                {error.message}\n            </Alert>\n        </Snackbar>\n    )\n}\n\nconst ErrorHandlingProvider = () => {\n    const [errors, setErrors] = useState([])\n    const { lastError } = useGqlErrors()\n\n    const handleClose = useCallback(err => setErrors(eArr => eArr.filter(e => e !== err)), [\n        setErrors,\n    ])\n\n    useEffect(() => {\n        if (!lastError) return\n        const { networkError, graphQLErrors, operation } = lastError\n\n        if (networkError) {\n            setErrors(err => [...err, networkError])\n        } else if (graphQLErrors && Array.isArray(graphQLErrors)) {\n            const newErrors = []\n            console.log(graphQLErrors)\n            graphQLErrors.forEach(({ message, path, extensions }, idx) => {\n                const err = new ClientGqlError(message, path, extensions)\n                err.index = `${Date.now()}_${idx}`\n                if (err.code !== ClientGqlError.codes.VALIDATION) newErrors.push(err)\n            })\n            if (newErrors.length) setErrors(err => [...err, ...newErrors])\n        }\n    }, [setErrors, lastError])\n\n    return errors.map((err, idx) => (\n        <AlertError key={err.index} idx={idx} error={err} onClose={handleClose} />\n    ))\n}\n\nexport default ErrorHandlingProvider\n","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom'\nimport GqlDataProvider from './GqlDataProvider'\nimport AuthProvider from './Auth'\nimport ErrorHandlingProvider from './ErrorHandling'\n\nconst CoreProvider = ({ children }) => {\n    return (\n        <GqlDataProvider>\n            <AuthProvider>\n                <BrowserRouter basename=\"/\">{children} </BrowserRouter>\n            </AuthProvider>\n            <ErrorHandlingProvider />\n        </GqlDataProvider>\n    )\n}\n\nexport default CoreProvider\n","import React from 'react'\nimport { useQuery } from '@apollo/react-hooks'\nimport PageWrapper from 'components/wrappers/PageWrapper'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Alert from '@material-ui/lab/Alert'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport gql from 'graphql-tag'\nimport { Link } from 'react-router-dom'\nimport { userRoute } from 'helpers/routes'\n\nconst ListItemLink = props => <ListItem button component={Link} {...props} />\n\nconst GET_USERS = gql`\n    query {\n        allUsers: users {\n            id\n            login\n        }\n    }\n`\n\nconst UsersRoute = () => {\n    const { error, loading, data } = useQuery(GET_USERS)\n\n    return (\n        <PageWrapper>\n            {loading && <LinearProgress />}\n            {error && <Alert severity=\"error\">{error.message}</Alert>}\n            {!error && data && data.allUsers && (\n                <List>\n                    {data.allUsers.map(({ id, login }) => (\n                        <ListItemLink key={id} to={userRoute.link(id)}>\n                            {login}\n                        </ListItemLink>\n                    ))}\n                </List>\n            )}\n        </PageWrapper>\n    )\n}\n\nexport default UsersRoute\n","import moment from 'moment'\n\nexport const timeFormat = date => moment(date).format('DD-MMM-YY kk:mm:ss')\n\nexport const timestamp = date => new Date(date).getTime()\n","import { useState, useEffect } from 'react'\n\nconst getIconTag = () => {\n    const collection = document.head.getElementsByTagName('link')\n\n    for (let i = 0; i < collection.length; i++) {\n        if (collection[i].rel === 'icon') return collection[i]\n    }\n\n    const link = document.createElement('link')\n    link.rel = 'icon'\n    document.head.append(link)\n    return link\n}\n\nexport default icon => {\n    const [domIcon] = useState(getIconTag())\n    const [prevIcon] = useState(domIcon.href)\n\n    useEffect(\n        () => () => {\n            domIcon.href = prevIcon\n        },\n        [],\n    )\n\n    useEffect(() => {\n        domIcon.href = icon\n    }, [icon])\n}\n","import useIcon from './icon'\nimport useTitle from './title'\n\nexport default props => {\n    const { title, icon } = typeof props === 'object' ? props : { title: props }\n\n    useTitle(title)\n    useIcon(icon)\n}\n","import { useEffect } from 'react'\n\nexport default title => {\n    useEffect(() => {\n        const prevTitle = window.document.title\n        window.document.title = title\n\n        return () => {\n            window.document.title = prevTitle\n        }\n    }, [title])\n}\n","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Typography from '@material-ui/core/Typography'\nimport List from '@material-ui/core/List'\nimport ListItem from '@material-ui/core/ListItem'\nimport ListItemIcon from '@material-ui/core/ListItemIcon'\nimport ListItemText from '@material-ui/core/ListItemText'\nimport PermContactCalendarIcon from '@material-ui/icons/PermContactCalendar'\nimport CalendarTodayIcon from '@material-ui/icons/CalendarToday'\nimport { userRoute } from 'helpers/routes'\nimport { timeFormat } from 'helpers/time'\nimport useBody from 'hooks/useBody'\n\nconst UserInfo = ({ id, login, createdAt, updatedAt }) => {\n    useBody(`${login} page`)\n\n    return (\n        <List>\n            <ListItem>\n                <ListItemIcon>\n                    <PermContactCalendarIcon />\n                </ListItemIcon>\n                <Link to={userRoute.link(null, login)}>\n                    <Typography variant=\"button\">{login}</Typography>\n                </Link>\n            </ListItem>\n            <ListItem>\n                <ListItemIcon>\n                    <CalendarTodayIcon />\n                </ListItemIcon>\n                <ListItemText>createdAt: {timeFormat(createdAt)}</ListItemText>\n            </ListItem>\n            <ListItem>\n                <ListItemIcon>\n                    <CalendarTodayIcon />\n                </ListItemIcon>\n                <ListItemText>updatedAt: {timeFormat(updatedAt)}</ListItemText>\n            </ListItem>\n        </List>\n    )\n}\n\nexport default UserInfo\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Skeleton from '@material-ui/lab/Skeleton'\nimport Card from '@material-ui/core/Card'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport CardMedia from '@material-ui/core/CardMedia'\nimport Avatar from '@material-ui/core/Avatar'\nimport Typography from '@material-ui/core/Typography'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport Alert from '@material-ui/lab/Alert'\nimport { useQuery } from '@apollo/react-hooks'\nimport gql from 'graphql-tag'\nimport UserInfo from './UserInfo'\n\nconst GET_USER = gql`\n    query($id: ID!) {\n        getUser: user(id: $id) {\n            id\n            login\n            createdAt\n            updatedAt\n        }\n    }\n`\n\nconst UserSidebar = ({ userId }) => {\n    const { loading, error, data } = useQuery(GET_USER, {\n        variables: {\n            id: userId,\n        },\n    })\n\n    return (\n        <Paper>\n            {loading && <LinearProgress />}\n            {error && <Alert severity=\"error\">{error.message}</Alert>}\n            {data && data.getUser ? (\n                <UserInfo {...data.getUser} />\n            ) : (\n                <Alert severity=\"error\">User not found</Alert>\n            )}\n        </Paper>\n    )\n}\n\nexport default UserSidebar\n","// import { useState } from 'react'\n// import { useQuery } from '@apollo/react-hooks'\n// import gql from 'graphql-tag'\n\n// const GET_USER_ID = gql`\n//     query($login: String!) {\n//         getUserId: user(login: $login) {\n//             id\n//         }\n//     }\n// `\n\n// const useUserLoginToId = props => {\n//     if (props.userId) return props\n\n//     const { loading, error, data } = useQuery(GET_USER_ID, {\n//         variables: {\n//             login: props.userLogin,\n//         },\n//     })\n\n//     return {\n//         ...props,\n//         loading,\n//         error,\n//         userId: (data && data.getUserId && data.getUserId.id) || null,\n//     }\n// }\nconst useUserLoginToId = props => props\n\nexport default useUserLoginToId\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport Grid from '@material-ui/core/Grid'\n\nconst Panel = ({ children }) => {\n    return (\n        <Paper style={{ width: '98%' }}>\n            <Grid\n                container\n                justify=\"flex-end\"\n                direction=\"row\"\n                wrap=\"nowrap\"\n                alignItems=\"center\"\n                style={{ padding: 5, paddingRight: 10, margin: '5px 0' }}\n            >\n                {children}\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default Panel\n","import React, { useState, useCallback } from 'react'\nimport ShareIcon from '@material-ui/icons/Share'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport IconButton from '@material-ui/core/IconButton'\nimport Tooltip from '@material-ui/core/Tooltip'\n\nconst SharePanelSection = ({ path }) => {\n    const [open, setOpen] = useState(false)\n\n    const switchOpen = useCallback(() => setOpen(o => !o), [setOpen])\n\n    return (\n        <>\n            <Tooltip title=\"Share\">\n                <IconButton color=\"secondary\" size=\"small\" disabled={open} onClick={switchOpen}>\n                    <ShareIcon fontSize=\"small\" />\n                </IconButton>\n            </Tooltip>\n\n            {open && (\n                <Snackbar\n                    anchorOrigin={{\n                        vertical: 'bottom',\n                        horizontal: 'left',\n                    }}\n                    open\n                    autoHideDuration={6000}\n                    onClose={switchOpen}\n                    message={`Share: ${path}`}\n                />\n            )}\n        </>\n    )\n}\n\nexport default SharePanelSection\n","import { NOTE_TYPES, NOTE_TYPES_ARR } from '@nbs/global'\nimport { useState } from 'react'\nimport { notes as notesSchema } from '@nbs/validate'\nimport merge from 'merge'\n\nconst defaultInitialValues = {}\n\nexport const kindFields = {}\n\nObject.keys(notesSchema).forEach(key => {\n    kindFields[key] = []\n    Object.keys(notesSchema[key].fields).forEach(fieldKey => {\n        defaultInitialValues[fieldKey] = ''\n        kindFields[key].push(fieldKey)\n    })\n})\n\nexport const useValues = ({ kind, note }) => ({\n    initialValues: useState(() => merge.recursive({}, defaultInitialValues, note))[0],\n    blockedKind: useState(\n        () =>\n            new Set(\n                kind\n                    ? kind === NOTE_TYPES.DIR\n                        ? NOTE_TYPES_ARR.filter(nt => nt !== NOTE_TYPES.DIR)\n                        : [NOTE_TYPES.DIR]\n                    : [],\n            ),\n    )[0],\n})\n\nexport const useActions = ({ submitText, onCancel, cancelText }) =>\n    useState(() => ({\n        submit: {\n            text: submitText || 'Submit',\n        },\n        cancel:\n            onCancel && typeof onCancel === 'function'\n                ? {\n                      text: cancelText || 'Cancel',\n                      handler: onCancel,\n                  }\n                : null,\n    }))[0]\n","import { NOTE_TYPES, NOTE_TYPES_ARR } from '@nbs/global'\nimport { useState, useCallback } from 'react'\nimport { kindFields, useValues, useActions } from './helpers'\n\nexport default props => {\n    const [kind, setKind] = useState(props.kind || NOTE_TYPES.DIR)\n\n    const { initialValues, blockedKind } = useValues(props)\n\n    const actions = useActions(props)\n\n    const changeKind = useCallback(\n        (e, newKind) => {\n            if (NOTE_TYPES_ARR.includes(newKind)) {\n                setKind(newKind)\n            }\n        },\n        [setKind],\n    )\n\n    const handleSubmit = useCallback(\n        values =>\n            props.onSubmit(\n                kind,\n                kindFields[kind].reduce((obj, field) => {\n                    if (values[field]) obj[field] = values[field]\n                    return obj\n                }, {}),\n            ),\n        [kind, props?.onSubmit],\n    )\n\n    return { kind, changeKind, initialValues, blockedKind, handleSubmit, actions }\n}\n","import React, { createContext } from 'react'\nimport useMakeNotes from './useMakeNotes'\n\nexport const MakeNotesContext = createContext({})\n\nexport const MakeNotesProvider = ({ children, ...props }) => {\n    const ctx = useMakeNotes(props)\n\n    return <MakeNotesContext.Provider value={ctx}>{children}</MakeNotesContext.Provider>\n}\n","import { NOTE_TYPES } from '@nbs/global'\nimport TextFieldsIcon from '@material-ui/icons/TextFields'\nimport LinkIcon from '@material-ui/icons/Link'\nimport FolderIcon from '@material-ui/icons/Folder'\n\nexport default {\n    [NOTE_TYPES.DIR]: FolderIcon,\n    [NOTE_TYPES.TEXT]: TextFieldsIcon,\n    [NOTE_TYPES.LINK]: LinkIcon,\n}\n","import { NOTE_TYPES } from '@nbs/global'\nimport CreateNewFolderIcon from '@material-ui/icons/CreateNewFolder'\nimport kindIcons from './kind'\n\nexport default {\n    ...kindIcons,\n    [NOTE_TYPES.DIR]: CreateNewFolderIcon,\n}\n","import React, { useContext } from 'react'\nimport { NOTE_TYPES_ARR } from '@nbs/global'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { MakeNotesContext } from './ctx'\nimport kindIcons from '../icons/formKind'\n\nconst tabIcon = kind => {\n    const TIcon = kindIcons[kind]\n    return <TIcon />\n}\n\nconst MakeNotesTabs = () => {\n    const { kind, changeKind, blockedKind } = useContext(MakeNotesContext)\n\n    return (\n        <Tabs\n            value={kind}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={changeKind}\n            style={{ marginBottom: 10 }}\n        >\n            {NOTE_TYPES_ARR.map(nt => (\n                <Tab\n                    key={nt}\n                    label={tabIcon(nt) ? undefined : nt}\n                    icon={tabIcon(nt)}\n                    value={nt}\n                    disabled={blockedKind.has(nt)}\n                />\n            ))}\n        </Tabs>\n    )\n}\n\nexport default MakeNotesTabs\n","import React from 'react'\nimport MUTextField from '@material-ui/core/TextField'\nimport { useField } from 'formik'\n\nconst TextField = ({ name, type, label, required }) => {\n    const [field, meta] = useField(name)\n\n    const error = meta.touched && meta.error\n    const labelTxt = label ? `${label}${required ? '*' : ''}` : undefined\n    return (\n        <MUTextField\n            type={type}\n            {...field}\n            placeholder={labelTxt}\n            label={labelTxt}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"dense\"\n            error={!!error}\n            helperText={error}\n        />\n    )\n}\n\nexport default TextField\n","import React from 'react'\nimport MUTextField from '@material-ui/core/TextField'\nimport { useField } from 'formik'\n\nconst TextField = ({ name, type, label, required }) => {\n    const [field, meta] = useField(name)\n\n    const error = meta.touched && meta.error\n    const labelTxt = label ? `${label}${required ? '*' : ''}` : undefined\n\n    return (\n        <MUTextField\n            type={type}\n            {...field}\n            placeholder={labelTxt}\n            label={labelTxt}\n            fullWidth\n            variant=\"outlined\"\n            margin=\"dense\"\n            error={!!error}\n            helperText={error}\n            multiline\n            rowsMax={5}\n        />\n    )\n}\n\nexport default TextField\n","import React from 'react'\nimport Button from '@material-ui/core/Button'\nimport { useFormikContext } from 'formik'\n\nconst SubmitField = () => {\n    const { isSubmitting, errors, values } = useFormikContext()\n\n    return (\n        <Button\n            type=\"submit\"\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ marginTop: 10 }}\n            disabled={\n                isSubmitting ||\n                Object.keys(errors).some(key => !!errors[key]) ||\n                Object.keys(values).some(key => !values[key])\n            }\n        >\n            Submit\n        </Button>\n    )\n}\n\nexport default SubmitField\n","import React from 'react'\nimport { TextField } from 'components/fields'\n\nconst MakeDirFields = () => {\n    return (\n        <>\n            <TextField name=\"title\" label=\"Label\" required />\n            <TextField name=\"text\" label=\"Description\" />\n        </>\n    )\n}\n\nexport default MakeDirFields\n","import React from 'react'\nimport { TextField, TextareaField } from 'components/fields'\n\nconst MakeTextFields = () => {\n    return (\n        <>\n            <TextField name=\"title\" label=\"Title\" />\n            <TextareaField name=\"text\" label=\"Text\" required />\n        </>\n    )\n}\n\nexport default MakeTextFields\n","import React from 'react'\nimport { TextField, TextareaField } from 'components/fields'\n\nconst MakeLinkFields = () => {\n    return (\n        <>\n            <TextField name=\"title\" label=\"Label\" />\n            <TextField name=\"text\" label=\"Description\" />\n            <TextField name=\"url\" label=\"Link url\" required />\n        </>\n    )\n}\n\nexport default MakeLinkFields\n","import React, { useEffect, useContext } from 'react'\nimport Button from '@material-ui/core/Button'\nimport Grid from '@material-ui/core/Grid'\nimport { useFormikContext } from 'formik'\nimport { MakeNotesContext } from '../ctx'\n\nconst MakeNotesSubmitBtn = () => {\n    const { isSubmitting, errors, validateForm } = useFormikContext()\n    const {\n        kind,\n        actions: { submit: submitAction, cancel: cancelAction },\n    } = useContext(MakeNotesContext)\n\n    useEffect(() => {\n        validateForm()\n    }, [kind, validateForm])\n\n    return (\n        <Grid\n            container\n            direction=\"row\"\n            justify=\"space-between\"\n            alignItems=\"center\"\n            style={{ marginTop: 10 }}\n        >\n            <Button\n                type=\"submit\"\n                variant=\"contained\"\n                color=\"primary\"\n                disabled={isSubmitting || Object.keys(errors).some(key => !!errors[key])}\n            >\n                {submitAction.text}\n            </Button>\n            {cancelAction && (\n                <Button color=\"secondary\" onClick={cancelAction.handler}>\n                    {cancelAction.text}\n                </Button>\n            )}\n        </Grid>\n    )\n}\n\nexport default MakeNotesSubmitBtn\n","import React, { useContext, useCallback } from 'react'\nimport { Formik, Form } from 'formik'\nimport { notes as notesSchema } from '@nbs/validate'\nimport ValidationClientGqlError from '@nerjs/errors/ValidationClientGqlError'\nimport { MakeNotesContext } from '../ctx'\nimport MakeNotesSubmitBtn from './btn'\n\nconst MakeNotesForm = ({ children }) => {\n    const { kind, initialValues, handleSubmit } = useContext(MakeNotesContext)\n\n    const onSubmit = useCallback(\n        async (values, { setSubmitting, setErrors }) => {\n            setSubmitting(true)\n            try {\n                await handleSubmit(values)\n            } catch (e) {\n                // const err = ValidationClientGqlError.parseServerGqlError(e)\n                if (e.map && Object.keys(e.map).length) {\n                    setErrors(e.map)\n                }\n            }\n            setSubmitting(false)\n        },\n        [handleSubmit],\n    )\n\n    return (\n        <Formik\n            initialValues={initialValues}\n            validationSchema={notesSchema[kind]}\n            onSubmit={onSubmit}\n        >\n            <Form>\n                {children}\n                <br />\n                <MakeNotesSubmitBtn />\n            </Form>\n        </Formik>\n    )\n}\n\nexport default MakeNotesForm\n","import React, { useContext } from 'react'\nimport { NOTE_TYPES } from '@nbs/global'\nimport MakeDirFields from './fields/dir'\nimport MakeTextFields from './fields/text'\nimport MakeLinkFields from './fields/link'\nimport { MakeNotesContext } from './ctx'\nimport { MakeNotesForm } from './form'\n\nconst fields = {\n    [NOTE_TYPES.DIR]: MakeDirFields,\n    [NOTE_TYPES.TEXT]: MakeTextFields,\n    [NOTE_TYPES.LINK]: MakeLinkFields,\n}\n\nconst MakeNotesBody = () => {\n    const { kind } = useContext(MakeNotesContext)\n\n    const Fields = fields[kind]\n\n    return (\n        <MakeNotesForm>\n            <Fields />\n        </MakeNotesForm>\n    )\n}\n\nexport default MakeNotesBody\n","import React from 'react'\nimport Card from '@material-ui/core/Card'\nimport CardContent from '@material-ui/core/CardContent'\nimport MakeNotesTabs from './Tabs'\nimport MakeNotesBody from './Body'\nimport { MakeNotesProvider } from './ctx'\n\nconst MakeNotes = props => {\n    return (\n        <Card>\n            <MakeNotesProvider {...props}>\n                <CardContent>\n                    <MakeNotesTabs />\n                    <MakeNotesBody />\n                </CardContent>\n            </MakeNotesProvider>\n        </Card>\n    )\n}\n\nexport default MakeNotes\n","import React, { useCallback, useState } from 'react'\nimport Dialog from '@material-ui/core/Dialog'\nimport DialogContent from '@material-ui/core/DialogContent'\nimport DialogTitle from '@material-ui/core/DialogTitle'\nimport MakeNotes from 'components/makeNotes'\nimport ValidationClientGqlError from '@nerjs/errors/ValidationClientGqlError'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst MakeCoreDialog = ({\n    title,\n    mutation,\n    variablesFilter,\n    onSubmit,\n    onClose,\n    errorPath,\n    ...props\n}) => {\n    const [loading, setLoading] = useState(false)\n    const handleSubmit = useCallback(\n        async (...args) => {\n            setLoading(true)\n            try {\n                const { data } = await mutation(variablesFilter(...args))\n                setLoading(false)\n                onSubmit((data || {}).make)\n            } catch (e) {\n                const err = ValidationClientGqlError.parseServerGqlError(e, 'make')\n\n                if (err.hasResults) {\n                    Object.keys(err.map).forEach(key => {\n                        err.map[key.replace(/^note\\./, '')] = err.map[key]\n                    })\n                }\n                setLoading(false)\n                throw err\n            }\n        },\n        [mutation, variablesFilter, onSubmit, setLoading],\n    )\n\n    return (\n        <Dialog open onClose={onClose}>\n            {loading && <LinearProgress />}\n            <DialogTitle>{title}</DialogTitle>\n            <DialogContent>\n                <MakeNotes\n                    {...props}\n                    cancelText=\"Close\"\n                    onCancel={onClose}\n                    onSubmit={handleSubmit}\n                />\n            </DialogContent>\n        </Dialog>\n    )\n}\n\nexport default MakeCoreDialog\n","import React, { useCallback } from 'react'\nimport gql from 'graphql-tag'\nimport MakeCoreDialog from './MakeCoreDialog'\nimport { useMutation } from '@apollo/react-hooks'\n\nconst ADD_NOTE = gql`\n    mutation($kind: Kind!, $parent: ID, $note: NoteInput!) {\n        make: addNote(kind: $kind, parent: $parent, note: $note) {\n            id\n            kind\n            title\n            text\n        }\n    }\n`\n\nconst AddNote = ({ parent, onClose, onSubmit }) => {\n    const [addNote /*, { loading, error, data } */] = useMutation(ADD_NOTE)\n\n    const variablesFilter = useCallback(\n        (kind, note) => ({\n            variables: {\n                parent,\n                kind,\n                note,\n            },\n        }),\n        [parent],\n    )\n\n    return (\n        <MakeCoreDialog\n            title=\"Add note\"\n            mutation={addNote}\n            variablesFilter={variablesFilter}\n            errorPath=\"addNote\"\n            onSubmit={onSubmit}\n            onClose={onClose}\n            submitText=\"Add\"\n        />\n    )\n}\n\nexport default AddNote\n","import React, { useCallback, useEffect } from 'react'\nimport gql from 'graphql-tag'\nimport Backdrop from '@material-ui/core/Backdrop'\nimport CircularProgress from '@material-ui/core/CircularProgress'\nimport MakeCoreDialog from './MakeCoreDialog'\nimport { useQuery, useMutation } from '@apollo/react-hooks'\n\nconst GET_NOTE = gql`\n    query($id: ID!) {\n        note(id: $id) {\n            id\n            kind\n            title\n            text\n            url\n            owner {\n                id\n            }\n        }\n    }\n`\n\nconst EDIT_NOTE = gql`\n    mutation($id: ID!, $note: NoteInput!) {\n        make: editNote(id: $id, note: $note) {\n            id\n        }\n    }\n`\n\nconst EditNote = ({ id, kind, onClose, onSubmit }) => {\n    const { loading, error, data } = useQuery(GET_NOTE, {\n        variables: { id },\n    })\n\n    const [editNote] = useMutation(EDIT_NOTE)\n\n    useEffect(() => {\n        if (error) onClose()\n    }, [error, onClose])\n\n    const variablesFilter = useCallback((kind, note) => ({ variables: { id, note } }), [id])\n\n    if (loading || !data?.note)\n        return (\n            <Backdrop open onClick={onClose}>\n                <CircularProgress color=\"inherit\" />\n            </Backdrop>\n        )\n\n    return (\n        <MakeCoreDialog\n            title=\"Edit note\"\n            mutation={editNote}\n            variablesFilter={variablesFilter}\n            errorPath=\"addNote\"\n            onSubmit={onSubmit}\n            onClose={onClose}\n            submitText=\"Edit\"\n            kind={kind}\n            note={data.note}\n        />\n    )\n}\nexport default EditNote\n","import React, { useState, useCallback } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport AddBoxIcon from '@material-ui/icons/AddBox'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { AddNote } from 'components/notes/Make'\n\nconst AddPanelSection = ({ owner, parent }) => {\n    const [showForm, setShowForm] = useState(false)\n    const [snackBar, setSnackbar] = useState(null)\n\n    const hideSnackbar = useCallback(() => setSnackbar(null), [setSnackbar])\n\n    const switchShowForm = useCallback(() => setShowForm(s => !s), [setShowForm])\n\n    const handleSubmit = useCallback(\n        ({ id, kind, title }) => {\n            setShowForm(false)\n            setSnackbar(title ? `${title} added` : `${kind} ID: ${id} Added`)\n        },\n        [setShowForm, setSnackbar],\n    )\n\n    return (\n        <>\n            <Tooltip title=\"Add note\">\n                <IconButton\n                    color=\"primary\"\n                    size=\"small\"\n                    disabled={showForm}\n                    onClick={switchShowForm}\n                >\n                    <AddBoxIcon fontSize=\"small\" />\n                </IconButton>\n            </Tooltip>\n            {showForm && (\n                <AddNote\n                    parent={parent}\n                    owner={owner}\n                    onClose={switchShowForm}\n                    onSubmit={handleSubmit}\n                />\n            )}\n\n            {snackBar && (\n                <Snackbar open autoHideDuration={6000} onClose={hideSnackbar}>\n                    <Alert onClose={hideSnackbar} severity=\"success\">\n                        {snackBar}\n                    </Alert>\n                </Snackbar>\n            )}\n        </>\n    )\n}\n\nexport default AddPanelSection\n","import React, { useState, useCallback, useEffect } from 'react'\nimport IconButton from '@material-ui/core/IconButton'\nimport Snackbar from '@material-ui/core/Snackbar'\nimport Alert from '@material-ui/lab/Alert'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport EditIcon from '@material-ui/icons/Edit'\nimport { EditNote } from 'components/notes/Make'\nimport { useLocation, useHistory } from 'react-router-dom'\n\nconst EditPanelSection = ({ id, kind }) => {\n    const { state } = useLocation()\n    const history = useHistory()\n    const [showForm, setShowForm] = useState(false)\n    const [snackBar, setSnackbar] = useState(null)\n\n    const hideSnackbar = useCallback(() => setSnackbar(null), [setSnackbar])\n    const switchShowForm = useCallback(() => setShowForm(s => !s), [setShowForm])\n\n    const handleSubmit = useCallback(\n        ({ kind, title }) => {\n            setShowForm(false)\n            setSnackbar(title ? `${title} edited` : `${kind} ID: ${id} Edited`)\n        },\n        [setShowForm, setSnackbar, id],\n    )\n\n    useEffect(() => {\n        if (!state?.edit) return\n        if (state.edit === id) setShowForm(true)\n        history.replace(history.location.pathname, { ...state, edit: null })\n    }, [state?.edit, id, history, setShowForm])\n\n    return (\n        <>\n            <Tooltip title=\"Edit\">\n                <IconButton\n                    color=\"primary\"\n                    size=\"small\"\n                    disabled={showForm}\n                    onClick={switchShowForm}\n                >\n                    <EditIcon fontSize=\"small\" />\n                </IconButton>\n            </Tooltip>\n\n            {showForm && (\n                <EditNote id={id} kind={kind} onClose={switchShowForm} onSubmit={handleSubmit} />\n            )}\n\n            {snackBar && (\n                <Snackbar open autoHideDuration={6000} onClose={hideSnackbar}>\n                    <Alert onClose={hideSnackbar} severity=\"success\">\n                        {snackBar}\n                    </Alert>\n                </Snackbar>\n            )}\n        </>\n    )\n}\n\nexport default EditPanelSection\n","import React from 'react'\nimport useAuth from 'hooks/useAuth'\nimport { NOTE_TYPES } from '@nbs/global'\nimport AddPanelSection from './AddSection'\nimport EditPanelSection from './EditSection'\n\nconst MakePanelSection = ({ kind, id, owner }) => {\n    const { isAuth, user } = useAuth()\n\n    if (!isAuth || !user || owner !== user?.id) return null\n\n    return (\n        <>\n            {kind === NOTE_TYPES.DIR && <AddPanelSection owner={owner} parent={id} />}\n            {id && <EditPanelSection kind={kind} id={id} />}\n        </>\n    )\n}\n\nexport default MakePanelSection\n","import React from 'react'\nimport PersonIcon from '@material-ui/icons/Person'\nimport { Link } from 'react-router-dom'\nimport { userRoute } from 'helpers/routes'\n\nconst UserCrumb = ({ id, login }) => {\n    return (\n        <Link\n            to={userRoute.link(id)}\n            style={{\n                display: 'flex',\n                flexWrap: 'nowrap',\n                textDecoration: 'none',\n                color: '#3f51b5ee',\n            }}\n        >\n            <PersonIcon />\n            {login}\n        </Link>\n    )\n}\n\nexport default UserCrumb\n","import React from 'react'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport { NOTE_TYPES } from '@nbs/global'\nimport kindIcons from '../../../icons/kind'\n\nconst titles = {\n    [NOTE_TYPES.DIR]: 'Folder',\n}\n\nconst KindIconPanelSection = ({ kind }) => {\n    const Icon = kindIcons[kind]\n    return (\n        <Tooltip title={titles[kind] || kind}>\n            <Icon fontSize=\"small\" style={{ opacity: 0.7 }} />\n        </Tooltip>\n    )\n}\n\nexport default KindIconPanelSection\n","import React from 'react'\nimport { noteRoute } from 'helpers/routes'\nimport KindIconPanelSection from '../KindIconSection'\nimport { Link } from 'react-router-dom'\n\nconst ParentCrumb = ({ id, kind, title }) => {\n    return (\n        <Link\n            to={noteRoute.link(id)}\n            style={{\n                display: 'flex',\n                flexWrap: 'nowrap',\n                textDecoration: 'none',\n                color: '#3f51b5ee',\n                alignItems: 'center',\n            }}\n        >\n            <KindIconPanelSection kind={kind} />\n            <span style={{ marginLeft: 5, whiteSpace: 'nowrap' }}>{title}</span>\n        </Link>\n    )\n}\n\nexport default ParentCrumb\n","import React from 'react'\nimport { noteRoute } from 'helpers/routes'\nimport KindIconPanelSection from '../KindIconSection'\nimport { Link } from 'react-router-dom'\n\nconst CurrentCrumb = ({ id, kind, title }) => {\n    return (\n        <div\n            style={{\n                display: 'flex',\n                flexWrap: 'nowrap',\n                textDecoration: 'none',\n                color: '#3339',\n                alignItems: 'center',\n            }}\n        >\n            <KindIconPanelSection kind={kind} />\n            <span style={{ marginLeft: 5, whiteSpace: 'nowrap' }}>{title}</span>\n        </div>\n    )\n}\n\nexport default CurrentCrumb\n","import React from 'react'\nimport MuiBreadcrumbs from '@material-ui/core/Breadcrumbs'\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft'\nimport PersonIcon from '@material-ui/icons/Person'\nimport { makeStyles } from '@material-ui/core/styles'\nimport { NOTE_TYPES } from '@nbs/global'\nimport UserCrumb from './UserCrumb'\nimport Crumb from './Crumb'\nimport KindIconPanelSection from '../KindIconSection'\nimport CurrentCrumb from './CurrentCrumb'\n\nconst getStyles = makeStyles(() => ({\n    root: { marginRight: 10, width: '100%' },\n    ol: { display: 'flex', flexWrap: 'nowrap', flexDirection: 'row' },\n    li: { display: 'flex', flexWrap: 'nowrap', flexDirection: 'row' },\n}))\n\nconst Breadcrumbs = ({\n    id,\n    owner,\n    root,\n    current,\n    currentTitle,\n    currentKind,\n    parent,\n    parentTitle,\n    ownerLogin,\n}) => {\n    if (root) return <KindIconPanelSection kind={NOTE_TYPES.DIR} />\n\n    return (\n        <MuiBreadcrumbs classes={getStyles()}>\n            <UserCrumb id={owner} login={ownerLogin} />\n            {parent && <Crumb kind={NOTE_TYPES.DIR} id={parent} title={parentTitle} />}\n            {current && <CurrentCrumb kind={currentKind} id={current} title={currentTitle} />}\n        </MuiBreadcrumbs>\n    )\n}\n\nexport default Breadcrumbs\n","import React from 'react'\nimport { NOTE_TYPES } from '@nbs/global'\nimport Panel from './Panel'\nimport SharePanelSection from './sections/ShareSection'\nimport MakePanelSection from './sections/MakeSection'\nimport Breadcrumbs from './sections/Breadcrumbs'\n\nconst ListNotesPanel = ({ id, owner, root, title, parent, parentTitle, ownerLogin }) => {\n    return (\n        <Panel>\n            <Breadcrumbs\n                root={root}\n                owner={owner}\n                ownerLogin={ownerLogin}\n                parent={parent}\n                parentTitle={parentTitle}\n                current={id}\n                currentTitle={title}\n                currentKind={NOTE_TYPES.DIR}\n            />\n            <MakePanelSection kind={NOTE_TYPES.DIR} owner={owner} id={id} />\n            <SharePanelSection />\n        </Panel>\n    )\n}\n\nexport default ListNotesPanel\n","import React from 'react'\nimport Panel from './Panel'\nimport SharePanelSection from './sections/ShareSection'\nimport MakePanelSection from './sections/MakeSection'\nimport Breadcrumbs from './sections/Breadcrumbs'\n\nconst ItemNotesPanel = ({ id, kind, owner, root, title, parent, parentTitle, ownerLogin }) => {\n    return (\n        <Panel>\n            <Breadcrumbs\n                root={root}\n                owner={owner}\n                ownerLogin={ownerLogin}\n                parent={parent}\n                parentTitle={parentTitle}\n                current={id}\n                currentTitle={title}\n                currentKind={kind}\n            />\n            <MakePanelSection kind={kind} owner={owner} id={id} />\n            <SharePanelSection />\n        </Panel>\n    )\n}\n\nexport default ItemNotesPanel\n","import React, { useState, useCallback } from 'react'\nimport KindIconPanelSection from './sections/KindIconSection'\nimport SharePanelSection from './sections/ShareSection'\nimport { noteRoute } from 'helpers/routes'\nimport Paper from '@material-ui/core/Paper'\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz'\nimport { Grid } from '@material-ui/core'\nimport IconButton from '@material-ui/core/IconButton'\nimport EditIcon from '@material-ui/icons/Edit'\nimport Tooltip from '@material-ui/core/Tooltip'\nimport useAuth from 'hooks/useAuth'\nimport { Link } from 'react-router-dom'\n\nconst ShortItemNotesPanel = ({ id, kind, owner, children }) => {\n    const [show, setShow] = useState(false)\n    const { isAuth, user } = useAuth()\n    const handleHover = useCallback(() => setShow(true), [setShow])\n    const handleBlur = useCallback(() => setShow(false), [setShow])\n\n    return (\n        <Paper\n            style={{ width: '98%', position: 'relative', margin: '5px 0', overflow: 'hidden' }}\n            onMouseEnter={handleHover}\n            onMouseLeave={handleBlur}\n        >\n            <Paper\n                style={{\n                    display: 'flex',\n                    justifyContent: 'center',\n                    alignItems: 'center',\n                    position: 'absolute',\n                    top: 2,\n                    right: 2,\n                }}\n            >\n                {show ? (\n                    <>\n                        <SharePanelSection path={noteRoute.link(id)} />\n                        {isAuth && user && user.id === owner && (\n                            <Tooltip title=\"edit\">\n                                <IconButton\n                                    size=\"small\"\n                                    color=\"primary\"\n                                    component={Link}\n                                    to={noteRoute.link(id, { edit: id })}\n                                >\n                                    <EditIcon size=\"small\" />\n                                </IconButton>\n                            </Tooltip>\n                        )}\n                    </>\n                ) : (\n                    <MoreHorizIcon />\n                )}\n            </Paper>\n            <Grid container wrap=\"nowrap\">\n                <Grid item style={{ padding: 5 }}>\n                    <KindIconPanelSection kind={kind} />\n                </Grid>\n                <Grid item style={{ width: '95%' }}>\n                    {children}\n                </Grid>\n            </Grid>\n        </Paper>\n    )\n}\n\nexport default ShortItemNotesPanel\n","import React from 'react'\nimport ShortItemNotesPanel from '../panel/ShortItemPanel'\nimport { Link } from 'react-router-dom'\nimport { noteRoute } from 'helpers/routes'\n\nconst DirListItem = ({ kind, id, owner, title, text }) => {\n    return (\n        <ShortItemNotesPanel kind={kind} id={id} owner={owner}>\n            <Link style={{ textDecoration: 'none', color: '#333' }} to={noteRoute.link(id)}>\n                <div style={{ fontSize: 16, fontWeight: 600, padding: 5, paddingBottom: 0 }}>\n                    {title}\n                </div>\n                {text && <div style={{ fontSize: 13, color: '#999' }}>{text}</div>}\n            </Link>\n        </ShortItemNotesPanel>\n    )\n}\n\nexport default DirListItem\n","import React from 'react'\nimport ShortItemNotesPanel from '../panel/ShortItemPanel'\nimport { Link } from 'react-router-dom'\nimport { noteRoute } from 'helpers/routes'\n\nconst TextListItem = ({ id, owner, kind, ...props }) => {\n    const title = props.title || props.text\n    const text = props.title ? props.text : null\n\n    return (\n        <ShortItemNotesPanel kind={kind} id={id} owner={owner}>\n            <Link style={{ textDecoration: 'none', color: '#444' }} to={noteRoute.link(id)}>\n                <div\n                    style={{\n                        fontSize: 15,\n                        fontWeight: 600,\n                        padding: 5,\n                        paddingBottom: 0,\n                        whiteSpace: 'nowrap',\n                        width: '100%',\n                        overflow: 'hidden',\n                    }}\n                >\n                    {title}\n                </div>\n                {text && <div style={{ fontSize: 14, color: '#666' }}>{text}</div>}\n            </Link>\n        </ShortItemNotesPanel>\n    )\n}\n\nexport default TextListItem\n","import React from 'react'\nimport ShortItemNotesPanel from '../panel/ShortItemPanel'\nimport { Link } from 'react-router-dom'\nimport { noteRoute } from 'helpers/routes'\n\nconst LinkListItem = ({ id, kind, owner, title, text, url }) => {\n    return (\n        <ShortItemNotesPanel kind={kind} id={id} owner={owner}>\n            <Link style={{ textDecoration: 'none', color: '#333' }} to={noteRoute.link(id)}>\n                <div style={{ fontSize: 15, fontWeight: 600, padding: 5, paddingBottom: 0 }}>\n                    {title || text || url}\n                </div>\n            </Link>\n            <a\n                href={url}\n                target=\"_blank\"\n                rel=\"noopener\"\n                style={{\n                    fontSize: 12,\n                    letterSpacing: 1.5,\n                    textDecoration: 'none',\n                    color: '#335',\n                    marginBottom: 5,\n                }}\n            >\n                {url}\n            </a>\n        </ShortItemNotesPanel>\n    )\n}\n\nexport default LinkListItem\n","import { NOTE_TYPES } from '@nbs/global'\nimport DirListItem from './Dir'\nimport TextListItem from './Text'\nimport LinkListItem from './Link'\n\nexport default {\n    [NOTE_TYPES.DIR]: DirListItem,\n    [NOTE_TYPES.TEXT]: TextListItem,\n    [NOTE_TYPES.LINK]: LinkListItem,\n}\n","import React from 'react'\nimport listItems from '../listItems'\n\nconst ListItemInner = props => {\n    const ListItem = listItems[props.kind]\n\n    return <ListItem {...props} />\n}\n\nexport default ListItemInner\n","import React from 'react'\nimport Paper from '@material-ui/core/Paper'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport List from '@material-ui/core/List'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport ListItemInner from './ListItem'\n\nconst GET_NOTES = gql`\n    query($query: NoteQueryInput!) {\n        notes(query: $query) {\n            kind\n            id\n            title\n            text\n            url\n        }\n    }\n`\n\nconst NotesListInner = ({ root, owner, parent }) => {\n    const { loading, error, data } = useQuery(GET_NOTES, {\n        variables: { query: { root, owner, parent, limit: 200, sort: { created: false } } },\n    })\n\n    return (\n        <Paper>\n            {loading && <LinearProgress />}\n            {!error && data && (\n                <List>\n                    {data.notes.map(note => (\n                        <ListItemInner key={note.id} {...note} owner={owner} />\n                    ))}\n                </List>\n            )}\n        </Paper>\n    )\n}\n\nexport default NotesListInner\n","import React from 'react'\nimport { ListPanel } from '../panel'\nimport NotesListInner from './List'\n\nconst NotesList = ({ root, id, owner, title, parent, parentTitle, ownerLogin }) => {\n    return (\n        <>\n            <ListPanel\n                owner={owner}\n                title={title}\n                id={id || null}\n                parent={parent}\n                parentTitle={parentTitle}\n                root={root}\n                ownerLogin={ownerLogin}\n            />\n            <NotesListInner root={root} owner={owner} parent={id} />\n        </>\n    )\n}\n\nexport default NotesList\n","import React from 'react'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { Paper } from '@material-ui/core'\nimport LinearProgress from '@material-ui/core/LinearProgress'\n\nconst GET_NOTE = gql`\n    query($id: ID!) {\n        note(id: $id) {\n            id\n            kind\n            title\n            text\n            url\n            owner {\n                id\n            }\n        }\n    }\n`\n\nconst style = {\n    display: 'block',\n    maxWidth: '95%',\n    margin: '2px auto',\n}\n\nconst Item = ({ id }) => {\n    const { loading, error, data } = useQuery(GET_NOTE, { variables: { id } })\n\n    return (\n        <Paper>\n            {loading && <LinearProgress />}\n            {data?.note && (\n                <>\n                    {data.note.title && <h3 style={{ ...style }}>{data.note.title}</h3>}\n                    {data.note.text && <p style={{ ...style }}>{data.note.text}</p>}\n                    {data.note.url && (\n                        <a href={data.note.url} targer=\"_blank\" style={{ ...style }}>\n                            {data.note.url}\n                        </a>\n                    )}\n                </>\n            )}\n        </Paper>\n    )\n}\n\nexport default Item\n","import React from 'react'\nimport { ItemPanel } from '../panel'\nimport Item from './Item'\n\nconst NoteItem = ({ root, id, kind, owner, title, parent, parentTitle, ownerLogin }) => {\n    return (\n        <>\n            <ItemPanel\n                owner={owner}\n                title={title}\n                id={id || null}\n                kind={kind}\n                parent={parent}\n                parentTitle={parentTitle}\n                root={root}\n                ownerLogin={ownerLogin}\n            />\n            <Item id={id} />\n        </>\n    )\n}\n\nexport default NoteItem\n","import React from 'react'\nimport Grid from '@material-ui/core/Grid'\nimport PageWrapper from 'components/wrappers/PageWrapper'\nimport UserSidebar from 'components/userSeidebar'\nimport useUserLoginToId from 'hooks/useUserLoginToId'\nimport Alert from '@material-ui/lab/Alert'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport { NotesList } from 'components/notes'\n\nconst UserRoute = ({ match: { params } }) => {\n    const { loading, error, userId } = useUserLoginToId(params)\n\n    return (\n        <PageWrapper>\n            {loading && <LinearProgress />}\n            {!loading && (error || !userId) && (\n                <Alert severity=\"error\">{(error && error.message) || 'User not found'}</Alert>\n            )}\n            {userId && (\n                <Grid container spacing={1}>\n                    <Grid item md={3}>\n                        <UserSidebar userId={userId} />\n                    </Grid>\n                    <Grid item md={9}>\n                        <NotesList root owner={userId} />\n                    </Grid>\n                </Grid>\n            )}\n        </PageWrapper>\n    )\n}\n\nexport default UserRoute\n","import React from 'react'\nimport PageWrapper from 'components/wrappers/PageWrapper'\nimport { useRouteMatch } from 'react-router-dom'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport gql from 'graphql-tag'\nimport { useQuery } from '@apollo/react-hooks'\nimport { NOTE_TYPES } from '@nbs/global'\nimport { NotesList, NoteItem } from 'components/notes'\n\nconst GET_NOTE = gql`\n    query($noteId: ID!) {\n        note(id: $noteId) {\n            id\n            kind\n            title\n            owner {\n                id\n                login\n            }\n            parent {\n                id\n                title\n            }\n        }\n    }\n`\n\nconst NoteRouteInner = ({ id, kind, title, owner, parent }) => {\n    const props = {\n        id,\n        kind,\n        title,\n        root: false,\n        owner: owner?.id,\n        ownerLogin: owner.login,\n        parent: parent?.id,\n        parentTitle: parent?.title,\n    }\n\n    return kind === NOTE_TYPES.DIR ? <NotesList {...props} /> : <NoteItem {...props} />\n}\n\nconst NotesRoute = () => {\n    const {\n        params: { noteId },\n    } = useRouteMatch()\n\n    const { loading, error, data } = useQuery(GET_NOTE, {\n        variables: { noteId },\n    })\n\n    return (\n        <PageWrapper>\n            {loading && <LinearProgress />}\n            {!error && data?.note && <NoteRouteInner {...data.note} />}\n        </PageWrapper>\n    )\n}\n\nexport default NotesRoute\n","import React from 'react'\nimport Container from '@material-ui/core/Container'\n\nconst EmptyWrapper = ({ children }) => {\n    return <Container maxWidth=\"sm\">{children}</Container>\n}\n\nexport default EmptyWrapper\n","import React from 'react'\nimport Alert from '@material-ui/lab/Alert'\nimport { useFormikContext } from 'formik'\n\nconst AlertError = () => {\n    const { status } = useFormikContext()\n    if (!status) return null\n    return <Alert severity=\"error\">{status}</Alert>\n}\n\nexport default AlertError\n","import React, { useCallback } from 'react'\nimport useAuth from 'hooks/useAuth'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport { Formik, Form } from 'formik'\nimport { registration as registrationSchema } from '@nbs/validate/auth'\nimport { TextField, SubmitField } from 'components/fields'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport AlertError from './AlertError'\nimport useBody from 'hooks/useBody'\n\nconst RegistrationEntryRoute = () => {\n    const history = useHistory()\n    const { state } = useLocation()\n    const { registration } = useAuth()\n    useBody({ title: 'Registration', icon: '/icons/key.png' })\n\n    const handleSubmit = useCallback(\n        async (values, { setSubmitting, setStatus, setErrors }) => {\n            setSubmitting(true)\n            try {\n                await registration(values, state?.referer)\n            } catch (e) {\n                if (e.map && Object.keys(e.map).length) {\n                    setErrors(e.map)\n                } else {\n                    setStatus(e.message)\n                }\n                setSubmitting(false)\n            }\n        },\n        [registration, history, state?.referer],\n    )\n\n    return (\n        <>\n            <CardHeader title=\"Registration\" />\n            <CardContent>\n                <Formik\n                    initialValues={{ login: '', password: '', confirmPassword: '' }}\n                    onSubmit={handleSubmit}\n                    validationSchema={registrationSchema}\n                >\n                    <Form>\n                        <AlertError />\n                        <TextField name=\"login\" label=\"login\" type=\"text\" required />\n                        <TextField name=\"password\" label=\"password\" type=\"text\" required />\n                        <TextField\n                            name=\"confirmPassword\"\n                            label=\"confirm password\"\n                            type=\"text\"\n                            required\n                        />\n                        <SubmitField />\n                    </Form>\n                </Formik>\n            </CardContent>\n        </>\n    )\n}\n\nexport default RegistrationEntryRoute\n","import React, { useCallback } from 'react'\nimport useAuth from 'hooks/useAuth'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport { Formik, Form } from 'formik'\nimport { login as loginSchema } from '@nbs/validate/auth'\nimport { TextField, SubmitField } from 'components/fields'\nimport { useLocation } from 'react-router-dom'\nimport AlertError from './AlertError'\nimport useBody from 'hooks/useBody'\n\nconst LoginEntryRoute = () => {\n    const { state } = useLocation()\n    const { login } = useAuth()\n    useBody({ title: 'Login', icon: '/icons/key.png' })\n\n    const handleSubmit = useCallback(\n        async (values, { setSubmitting, setStatus, setErrors }) => {\n            setSubmitting(true)\n            try {\n                await login(values, state?.referer)\n            } catch (e) {\n                if (e.map && Object.keys(e.map).length) {\n                    setErrors(e.map)\n                } else {\n                    setStatus(e.message)\n                }\n                setSubmitting(false)\n            }\n        },\n        [login, state?.referer],\n    )\n\n    return (\n        <>\n            <CardHeader title=\"Authorization\" />\n            <CardContent>\n                <Formik\n                    initialValues={{ login: '', password: '' }}\n                    onSubmit={handleSubmit}\n                    validationSchema={loginSchema}\n                >\n                    <Form>\n                        <AlertError />\n                        <TextField name=\"login\" label=\"login\" type=\"text\" required />\n                        <TextField name=\"password\" label=\"password\" type=\"text\" required />\n                        <SubmitField />\n                    </Form>\n                </Formik>\n            </CardContent>\n        </>\n    )\n}\nexport default LoginEntryRoute\n","import React, { useCallback, useState } from 'react'\nimport useAuth from 'hooks/useAuth'\nimport CardHeader from '@material-ui/core/CardHeader'\nimport CardContent from '@material-ui/core/CardContent'\nimport { useHistory, useLocation, Link } from 'react-router-dom'\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport Alert from '@material-ui/lab/Alert'\nimport useBody from 'hooks/useBody'\n\nconst LogoutEntryRoute = () => {\n    const [error, setError] = useState(null)\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n    const { state } = useLocation()\n    const { logout } = useAuth()\n    useBody({ title: 'Logout', icon: '/icons/key.png' })\n\n    const backLink = {\n        pathname: state?.referer || '/',\n        state: null,\n    }\n\n    const handlerLogout = useCallback(async () => {\n        setLoading(true)\n        try {\n            await logout(null, backLink?.pathname)\n        } catch (e) {\n            setError(e.message)\n            setLoading(false)\n        }\n    }, [logout, history, backLink.pathname, setLoading, setError])\n\n    return (\n        <>\n            <CardHeader title=\"Logout\" subheader=\"exit?\" />\n            <CardContent>\n                {error && <Alert severity=\"error\">{error}</Alert>}\n                <ButtonGroup style={{ display: 'flex', justifyContent: 'center' }}>\n                    <Button\n                        to={backLink}\n                        component={Link}\n                        variant=\"outlined\"\n                        style={{ minWidth: 150 }}\n                    >\n                        Back\n                    </Button>\n                    <Button\n                        variant=\"contained\"\n                        color=\"secondary\"\n                        style={{ minWidth: 150 }}\n                        onClick={handlerLogout}\n                        disabled={loading}\n                    >\n                        Exit\n                    </Button>\n                </ButtonGroup>\n            </CardContent>\n        </>\n    )\n}\n\nexport default LogoutEntryRoute\n","import React from 'react'\nimport { Route } from 'react-router-dom'\n\nconst PublicRoute = props => {\n    return <Route {...props} />\n}\n\nexport default PublicRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport useAuth from 'hooks/useAuth'\n\nconst PrivateRoute = ({ redirect = '/', component: Component, ...rest }) => {\n    const { isAuth } = useAuth()\n\n    return isAuth ? (\n        <Route {...rest} component={Component} />\n    ) : (\n        <Route {...rest} render={() => <Redirect to={redirect} />} />\n    )\n}\n\nexport default PrivateRoute\n","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\nimport useAuth from 'hooks/useAuth'\n\nconst ProtectedRoute = ({ redirect = '/', component: Component, ...rest }) => {\n    const { isAuth, loading } = useAuth()\n\n    return !isAuth ? (\n        <Route {...rest} component={Component} />\n    ) : (\n        <Route {...rest} render={() => <Redirect to={redirect} />} />\n    )\n}\n\nexport default ProtectedRoute\n","import React from 'react'\nimport EmptyWrapper from 'components/wrappers/EmptyWrapper'\nimport Card from '@material-ui/core/Card'\nimport CardActions from '@material-ui/core/CardActions'\nimport Button from '@material-ui/core/Button'\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack'\nimport { Link, Redirect, Switch } from 'react-router-dom'\nimport RegistrationEntryRoute from './Registration'\nimport { entryRoute } from 'helpers/routes'\nimport LoginEntryRoute from './Login'\nimport LogoutEntryRoute from './Logout'\nimport { ProtectedRoute, PrivateRoute } from 'helpers/route'\n\nconst EntryRoute = ({ location: { state } }) => {\n    return (\n        <EmptyWrapper>\n            <Card>\n                <Switch>\n                    <ProtectedRoute\n                        path={entryRoute.registration.path}\n                        component={RegistrationEntryRoute}\n                    />\n                    <ProtectedRoute path={entryRoute.login.path} component={LoginEntryRoute} />\n                    <PrivateRoute path={entryRoute.logout.path} component={LogoutEntryRoute} />\n                    <Redirect to=\"/\" />\n                </Switch>\n                <CardActions>\n                    {state && state.referer && state.referer !== '/' && (\n                        <Link to={state.referer}>\n                            <ArrowBackIcon />\n                        </Link>\n                    )}\n                    <Button to=\"/\" component={Link}>\n                        Home\n                    </Button>\n                </CardActions>\n            </Card>\n        </EmptyWrapper>\n    )\n}\n\nexport default EntryRoute\n","import React from 'react'\nimport HomeRoute from 'routes/Home'\nimport CoreProvider from 'data/CoreProvider'\nimport { homeRoute, usersRoute, userRoute, noteRoute, entryRoute } from 'helpers/routes'\nimport { Switch, Redirect } from 'react-router-dom'\nimport UsersRoute from 'routes/Users'\nimport UserRoute from 'routes/User'\nimport NotesRoute from 'routes/Notes'\nimport EntryRoute from 'routes/Entry'\nimport { PublicRoute } from 'helpers/route'\n\nfunction App() {\n    return (\n        <CoreProvider>\n            <Switch>\n                <PublicRoute path={homeRoute.path} exact component={HomeRoute} />\n                <PublicRoute path={usersRoute.path} exact component={UsersRoute} />\n                <PublicRoute path={userRoute.path} exact component={UserRoute} />\n                <PublicRoute path={noteRoute.path} exact component={NotesRoute} />\n                <PublicRoute path={entryRoute.path} component={EntryRoute} />\n                <Redirect to={homeRoute.link()} />\n            </Switch>\n        </CoreProvider>\n    )\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.0/8 are considered localhost for IPv4.\n        window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/),\n)\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config)\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit https://bit.ly/CRA-PWA',\n                    )\n                })\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config)\n            }\n        })\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing\n                if (installingWorker == null) {\n                    return\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See https://bit.ly/CRA-PWA.',\n                            )\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration)\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.')\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration)\n                            }\n                        }\n                    }\n                }\n            }\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error)\n        })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl, {\n        headers: { 'Service-Worker': 'script' },\n    })\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type')\n            if (\n                response.status === 404 ||\n                (contentType != null && contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload()\n                    })\n                })\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config)\n            }\n        })\n        .catch(() => {\n            console.log('No internet connection found. App is running in offline mode.')\n        })\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready\n            .then(registration => {\n                registration.unregister()\n            })\n            .catch(error => {\n                console.error(error.message)\n            })\n    }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n    // <React.StrictMode>\n    <App />,\n    // </React.StrictMode>,\n    document.getElementById('root'),\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","const yup = require('yup')\nconst { USER_SETTINGS } = require('@nbs/global')\n\nconst loginField = yup\n    .string()\n    .min(USER_SETTINGS.MIN_LOGIN)\n    .max(USER_SETTINGS.MAX_LOGIN)\n    .matches(USER_SETTINGS.MATCH_LOGIN)\n\nconst login = yup.object().shape({\n    login: loginField,\n    password: yup\n        .string()\n        .min(USER_SETTINGS.MIN_PASSWORD)\n        .max(USER_SETTINGS.MAX_PASSWORD)\n        .matches(USER_SETTINGS.MATCH_PASSWORD),\n})\n\nconst registration = login.concat(\n    yup.object().shape({\n        confirmPassword: yup.string().test('match', 'Passwords do not match', function() {\n            return this.parent.password == this.parent.confirmPassword\n        }),\n    }),\n)\n\nexports.loginField = loginField\nexports.login = login\nexports.registration = registration\n"],"sourceRoot":""}